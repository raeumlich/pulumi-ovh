// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    public static class GetCloudProjectCapabilitiesContainerregistryFilter
    {
        /// <summary>
        /// Use this data source to filter the list of container registry capabilities associated with a public cloud project to match one and only one capability.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var capability = Output.Create(Ovh.GetCloudProjectCapabilitiesContainerregistryFilter.InvokeAsync(new Ovh.GetCloudProjectCapabilitiesContainerregistryFilterArgs
        ///         {
        ///             PlanName = "SMALL",
        ///             Region = "GRA",
        ///             ServiceName = "XXXXXX",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetCloudProjectCapabilitiesContainerregistryFilterResult> InvokeAsync(GetCloudProjectCapabilitiesContainerregistryFilterArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCloudProjectCapabilitiesContainerregistryFilterResult>("ovh:index/getCloudProjectCapabilitiesContainerregistryFilter:getCloudProjectCapabilitiesContainerregistryFilter", args ?? new GetCloudProjectCapabilitiesContainerregistryFilterArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to filter the list of container registry capabilities associated with a public cloud project to match one and only one capability.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var capability = Output.Create(Ovh.GetCloudProjectCapabilitiesContainerregistryFilter.InvokeAsync(new Ovh.GetCloudProjectCapabilitiesContainerregistryFilterArgs
        ///         {
        ///             PlanName = "SMALL",
        ///             Region = "GRA",
        ///             ServiceName = "XXXXXX",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetCloudProjectCapabilitiesContainerregistryFilterResult> Invoke(GetCloudProjectCapabilitiesContainerregistryFilterInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCloudProjectCapabilitiesContainerregistryFilterResult>("ovh:index/getCloudProjectCapabilitiesContainerregistryFilter:getCloudProjectCapabilitiesContainerregistryFilter", args ?? new GetCloudProjectCapabilitiesContainerregistryFilterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudProjectCapabilitiesContainerregistryFilterArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The plan name
        /// </summary>
        [Input("planName", required: true)]
        public string PlanName { get; set; } = null!;

        /// <summary>
        /// The region name
        /// </summary>
        [Input("region", required: true)]
        public string Region { get; set; } = null!;

        /// <summary>
        /// The id of the public cloud project. If omitted,
        /// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetCloudProjectCapabilitiesContainerregistryFilterArgs()
        {
        }
    }

    public sealed class GetCloudProjectCapabilitiesContainerregistryFilterInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The plan name
        /// </summary>
        [Input("planName", required: true)]
        public Input<string> PlanName { get; set; } = null!;

        /// <summary>
        /// The region name
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// The id of the public cloud project. If omitted,
        /// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetCloudProjectCapabilitiesContainerregistryFilterInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCloudProjectCapabilitiesContainerregistryFilterResult
    {
        /// <summary>
        /// Plan code from the catalog
        /// </summary>
        public readonly string Code;
        /// <summary>
        /// Plan creation date
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Features of the plan
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudProjectCapabilitiesContainerregistryFilterFeatureResult> Features;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Plan name
        /// </summary>
        public readonly string Name;
        public readonly string PlanName;
        public readonly string Region;
        /// <summary>
        /// Container registry limits
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudProjectCapabilitiesContainerregistryFilterRegistryLimitResult> RegistryLimits;
        public readonly string ServiceName;
        /// <summary>
        /// Plan last update date
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetCloudProjectCapabilitiesContainerregistryFilterResult(
            string code,

            string createdAt,

            ImmutableArray<Outputs.GetCloudProjectCapabilitiesContainerregistryFilterFeatureResult> features,

            string id,

            string name,

            string planName,

            string region,

            ImmutableArray<Outputs.GetCloudProjectCapabilitiesContainerregistryFilterRegistryLimitResult> registryLimits,

            string serviceName,

            string updatedAt)
        {
            Code = code;
            CreatedAt = createdAt;
            Features = features;
            Id = id;
            Name = name;
            PlanName = planName;
            Region = region;
            RegistryLimits = registryLimits;
            ServiceName = serviceName;
            UpdatedAt = updatedAt;
        }
    }
}
