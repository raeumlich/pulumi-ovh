{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "cloudProject.ts",
        "cloudProjectContainerRegistry.ts",
        "cloudProjectContainerRegistryUser.ts",
        "cloudProjectFailoverIPAttach.ts",
        "cloudProjectKube.ts",
        "cloudProjectKubeNodepool.ts",
        "cloudProjectNetworkPrivate.ts",
        "cloudProjectNetworkPrivateSubnet.ts",
        "cloudProjectUser.ts",
        "config/index.ts",
        "config/vars.ts",
        "dbaaSLogsInput.ts",
        "dbaaSLogsOutputGraylogStream.ts",
        "dedicatedCephACL.ts",
        "dedicatedServerInstallTask.ts",
        "dedicatedServerRebootTask.ts",
        "dedicatedServerUpdate.ts",
        "domainZone.ts",
        "domainZoneRecord.ts",
        "domainZoneRedirection.ts",
        "getCloudProjectCapabilitiesContainerRegistry.ts",
        "getCloudProjectCapabilitiesContainerregistryFilter.ts",
        "getCloudProjectContainerRegistries.ts",
        "getCloudProjectContainerRegistryUsers.ts",
        "getCloudProjectContainerregistry.ts",
        "getCloudProjectFailoverIPAttach.ts",
        "getCloudProjectKube.ts",
        "getCloudProjectRegion.ts",
        "getCloudProjectRegions.ts",
        "getDBaaSLogsInputEngine.ts",
        "getDBaaSLogsOutputGraylogStream.ts",
        "getDedicatedCeph.ts",
        "getDedicatedInstallationTemplates.ts",
        "getDedicatedServer.ts",
        "getDedicatedServerBoots.ts",
        "getDedicatedServers.ts",
        "getDomainZone.ts",
        "getIPLoadBalancing.ts",
        "getIPLoadBalancingVRackNetwork.ts",
        "getIPLoadBalancingVRackNetworks.ts",
        "getIPService.ts",
        "getMe.ts",
        "getMeIPXEScript.ts",
        "getMeIPXEScripts.ts",
        "getMeIdentityUser.ts",
        "getMeIdentityUsers.ts",
        "getMeInstallationTemplate.ts",
        "getMeInstallationTemplates.ts",
        "getMePaymentMeanBankAccount.ts",
        "getMePaymentMeanCreditCard.ts",
        "getMeSSHKey.ts",
        "getMeSSHKeys.ts",
        "getOrderCart.ts",
        "getOrderCartProduct.ts",
        "getOrderCartProductOptions.ts",
        "getOrderCartProductOptionsPlan.ts",
        "getProductCartProductPlan.ts",
        "getVPS.ts",
        "getVRacks.ts",
        "index.ts",
        "iploadBalancing.ts",
        "iploadBalancingHTTPFarm.ts",
        "iploadBalancingHTTPFarmServer.ts",
        "iploadBalancingHTTPFrontend.ts",
        "iploadBalancingHTTPRoute.ts",
        "iploadBalancingHTTPRouteRule.ts",
        "iploadBalancingRefresh.ts",
        "iploadBalancingTCPFarm.ts",
        "iploadBalancingTCPFarmServer.ts",
        "iploadBalancingTCPFrontend.ts",
        "iploadBalancingTCPRoute.ts",
        "iploadBalancingTCPRouteRule.ts",
        "iploadBalancingVRackNetwork.ts",
        "ipreverse.ts",
        "ipservice.ts",
        "ipxescript.ts",
        "meIdentityUser.ts",
        "meInstallationTemplate.ts",
        "meInstallationTemplatePartitionScheme.ts",
        "meInstallationTemplatePartitionSchemeHardwareRAID.ts",
        "meInstallationTemplatePartitionSchemePartition.ts",
        "meSSHKey.ts",
        "provider.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts",
        "vrack.ts",
        "vrackCloudProject.ts",
        "vrackDedicatedServer.ts",
        "vrackDedicatedServerInterface.ts",
        "vrackIP.ts",
        "vrackIPLoadBalancing.ts"
    ]
}
