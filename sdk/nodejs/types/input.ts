// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface CloudProjectContainerRegistryPlan {
    /**
     * Plan code from the catalog
     */
    code?: pulumi.Input<string>;
    /**
     * Plan creation date
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Features of the plan
     */
    features?: pulumi.Input<pulumi.Input<inputs.CloudProjectContainerRegistryPlanFeature>[]>;
    /**
     * Plan ID
     */
    id?: pulumi.Input<string>;
    /**
     * Registry name
     */
    name?: pulumi.Input<string>;
    /**
     * Container registry limits
     */
    registryLimits?: pulumi.Input<pulumi.Input<inputs.CloudProjectContainerRegistryPlanRegistryLimit>[]>;
    /**
     * Registry last update date
     */
    updatedAt?: pulumi.Input<string>;
}

export interface CloudProjectContainerRegistryPlanFeature {
    /**
     * Vulnerability scanning
     */
    vulnerability?: pulumi.Input<boolean>;
}

export interface CloudProjectContainerRegistryPlanRegistryLimit {
    /**
     * Docker image storage limits in bytes
     */
    imageStorage?: pulumi.Input<number>;
    /**
     * Parallel requests on Docker image API (/v2 Docker registry API)
     */
    parallelRequest?: pulumi.Input<number>;
}

export interface CloudProjectNetworkPrivateRegionsAttribute {
    openstackid?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * the status of the network. should be normally set to 'ACTIVE'.
     */
    status: pulumi.Input<string>;
}

export interface CloudProjectNetworkPrivateRegionsStatus {
    region?: pulumi.Input<string>;
    /**
     * the status of the network. should be normally set to 'ACTIVE'.
     */
    status: pulumi.Input<string>;
}

export interface CloudProjectNetworkPrivateSubnetIpPool {
    /**
     * Enable DHCP.
     * Changing this forces a new resource to be created. Defaults to false.
     * _
     */
    dhcp?: pulumi.Input<boolean>;
    /**
     * Last ip for this region.
     * Changing this value recreates the subnet.
     */
    end?: pulumi.Input<string>;
    /**
     * Global network in CIDR format.
     * Changing this value recreates the subnet
     */
    network?: pulumi.Input<string>;
    /**
     * The region in which the network subnet will be created.
     * Ex.: "GRA1". Changing this value recreates the resource.
     */
    region?: pulumi.Input<string>;
    /**
     * First ip for this region.
     * Changing this value recreates the subnet.
     */
    start?: pulumi.Input<string>;
}

export interface CloudProjectOrder {
    /**
     * date
     */
    date?: pulumi.Input<string>;
    /**
     * Information about a Bill entry
     */
    details?: pulumi.Input<pulumi.Input<inputs.CloudProjectOrderDetail>[]>;
    /**
     * expiration date
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * order id
     */
    orderId?: pulumi.Input<number>;
}

export interface CloudProjectOrderDetail {
    /**
     * A description associated with the user.
     */
    description?: pulumi.Input<string>;
    /**
     * expiration date
     */
    domain?: pulumi.Input<string>;
    /**
     * order detail id
     */
    orderDetailId?: pulumi.Input<number>;
    /**
     * quantity
     */
    quantity?: pulumi.Input<string>;
}

export interface CloudProjectPlan {
    /**
     * Catalog name
     */
    catalogName?: pulumi.Input<string>;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.CloudProjectPlanConfiguration>[]>;
    /**
     * duration
     */
    duration: pulumi.Input<string>;
    /**
     * Plan code
     */
    planCode: pulumi.Input<string>;
    /**
     * Pricing model identifier
     */
    pricingMode: pulumi.Input<string>;
}

export interface CloudProjectPlanConfiguration {
    /**
     * Identifier of the resource
     */
    label: pulumi.Input<string>;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: pulumi.Input<string>;
}

export interface CloudProjectPlanOption {
    /**
     * Catalog name
     */
    catalogName?: pulumi.Input<string>;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.CloudProjectPlanOptionConfiguration>[]>;
    /**
     * duration
     */
    duration: pulumi.Input<string>;
    /**
     * Plan code
     */
    planCode: pulumi.Input<string>;
    /**
     * Pricing model identifier
     */
    pricingMode: pulumi.Input<string>;
}

export interface CloudProjectPlanOptionConfiguration {
    /**
     * Identifier of the resource
     */
    label: pulumi.Input<string>;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: pulumi.Input<string>;
}

export interface CloudProjectUserRole {
    /**
     * A description associated with the user.
     */
    description?: pulumi.Input<string>;
    /**
     * id of the role
     */
    id?: pulumi.Input<string>;
    /**
     * name of the role
     */
    name?: pulumi.Input<string>;
    /**
     * list of permissions associated with the role
     */
    permissions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DBaaSLogsInputConfiguration {
    /**
     * Flowgger configuration
     */
    flowgger?: pulumi.Input<inputs.DBaaSLogsInputConfigurationFlowgger>;
    /**
     * Logstash configuration
     */
    logstash?: pulumi.Input<inputs.DBaaSLogsInputConfigurationLogstash>;
}

export interface DBaaSLogsInputConfigurationFlowgger {
    /**
     * Type of format to decode. One of "RFC5424", "LTSV", "GELF", "CAPNP"
     */
    logFormat: pulumi.Input<string>;
    /**
     * Indicates how messages are delimited. One of "LINE", "NUL", "SYSLEN", "CAPNP"
     */
    logFraming: pulumi.Input<string>;
}

export interface DBaaSLogsInputConfigurationLogstash {
    /**
     * The filter section of logstash.conf
     */
    filterSection?: pulumi.Input<string>;
    /**
     * The filter section of logstash.conf
     */
    inputSection: pulumi.Input<string>;
    /**
     * The list of customs Grok patterns
     */
    patternSection?: pulumi.Input<string>;
}

export interface DedicatedServerInstallTaskDetails {
    /**
     * Template change log details.
     *
     * @deprecated field is not used anymore
     */
    changeLog?: pulumi.Input<string>;
    /**
     * Set up the server using the provided hostname instead of the default hostname.
     */
    customHostname?: pulumi.Input<string>;
    /**
     * Disk group id.
     */
    diskGroupId?: pulumi.Input<number>;
    /**
     * set to true to install RTM.
     */
    installRtm?: pulumi.Input<boolean>;
    /**
     * set to true to install sql server (Windows template only).
     */
    installSqlServer?: pulumi.Input<boolean>;
    /**
     * language.
     */
    language?: pulumi.Input<string>;
    /**
     * set to true to disable RAID.
     */
    noRaid?: pulumi.Input<boolean>;
    /**
     * Indicate the URL where your postinstall customisation script is located.
     */
    postInstallationScriptLink?: pulumi.Input<string>;
    /**
     * Indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is 'loh1Xee7eo OK OK OK UGh8Ang1Gu'.
     */
    postInstallationScriptReturn?: pulumi.Input<string>;
    /**
     * set to true to make a hardware raid reset.
     */
    resetHwRaid?: pulumi.Input<boolean>;
    /**
     * soft raid devices.
     */
    softRaidDevices?: pulumi.Input<number>;
    /**
     * Name of the ssh key that should be installed. Password login will be disabled.
     */
    sshKeyName?: pulumi.Input<string>;
    /**
     * Use the distribution's native kernel instead of the recommended OVH Kernel.
     */
    useDistribKernel?: pulumi.Input<boolean>;
    /**
     * set to true to use SPLA.
     */
    useSpla?: pulumi.Input<boolean>;
}

export interface DomainZoneOrder {
    /**
     * date
     */
    date?: pulumi.Input<string>;
    /**
     * Information about a Bill entry
     */
    details?: pulumi.Input<pulumi.Input<inputs.DomainZoneOrderDetail>[]>;
    /**
     * expiration date
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * order id
     */
    orderId?: pulumi.Input<number>;
}

export interface DomainZoneOrderDetail {
    /**
     * description
     */
    description?: pulumi.Input<string>;
    /**
     * expiration date
     */
    domain?: pulumi.Input<string>;
    /**
     * order detail id
     */
    orderDetailId?: pulumi.Input<number>;
    /**
     * quantity
     */
    quantity?: pulumi.Input<string>;
}

export interface DomainZonePlan {
    /**
     * Catalog name
     */
    catalogName?: pulumi.Input<string>;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.DomainZonePlanConfiguration>[]>;
    /**
     * duration
     */
    duration: pulumi.Input<string>;
    /**
     * Plan code
     */
    planCode: pulumi.Input<string>;
    /**
     * Pricing model identifier
     */
    pricingMode: pulumi.Input<string>;
}

export interface DomainZonePlanConfiguration {
    /**
     * Identifier of the resource
     */
    label: pulumi.Input<string>;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: pulumi.Input<string>;
}

export interface DomainZonePlanOption {
    /**
     * Catalog name
     */
    catalogName?: pulumi.Input<string>;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.DomainZonePlanOptionConfiguration>[]>;
    /**
     * duration
     */
    duration: pulumi.Input<string>;
    /**
     * Plan code
     */
    planCode: pulumi.Input<string>;
    /**
     * Pricing model identifier
     */
    pricingMode: pulumi.Input<string>;
}

export interface DomainZonePlanOptionConfiguration {
    /**
     * Identifier of the resource
     */
    label: pulumi.Input<string>;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: pulumi.Input<string>;
}

export interface IPLoadBalancingHTTPFarmProbe {
    /**
     * Force use of SSL (TLS)
     */
    forceSsl?: pulumi.Input<boolean>;
    /**
     * probe interval, Value between 30 and 3600 seconds, default 30
     */
    interval?: pulumi.Input<number>;
    /**
     * What to mach `pattern` against (`contains`, `default`, `internal`, `matches`, `status`)
     */
    match?: pulumi.Input<string>;
    /**
     * HTTP probe method (`GET`, `HEAD`, `OPTIONS`, `internal`)
     */
    method?: pulumi.Input<string>;
    /**
     * Negate probe result
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Pattern to match against `match`
     */
    pattern?: pulumi.Input<string>;
    /**
     * Port for backends to recieve traffic on.
     */
    port?: pulumi.Input<number>;
    /**
     * Valid values : `http`, `internal`, `mysql`, `oco`, `pgsql`, `smtp`, `tcp`
     */
    type: pulumi.Input<string>;
    /**
     * URL for HTTP probe type.
     */
    url?: pulumi.Input<string>;
}

export interface IPLoadBalancingHTTPRouteAction {
    /**
     * HTTP status code for "redirect" and "reject" actions
     */
    status?: pulumi.Input<number>;
    /**
     * Farm ID for "farm" action type or URL template for "redirect" action. You may use ${uri}, ${protocol}, ${host}, ${port} and ${path} variables in redirect target
     */
    target?: pulumi.Input<string>;
    /**
     * Action to trigger if all the rules of this route matches
     */
    type: pulumi.Input<string>;
}

export interface IPLoadBalancingHTTPRouteRule {
    /**
     * Name of the field to match like "protocol" or "host" "/ipLoadbalancing/{serviceName}/route/availableRules" for a list of available rules
     */
    field?: pulumi.Input<string>;
    /**
     * Matching operator. Not all operators are available for all fields. See "availableRules"
     * * `negate`- Invert the matching operator effect
     */
    match?: pulumi.Input<string>;
    negate?: pulumi.Input<boolean>;
    /**
     * Value to match against this match. Interpretation if this field depends on the match and field
     */
    pattern?: pulumi.Input<string>;
    /**
     * Id of your rule
     */
    ruleId?: pulumi.Input<number>;
    /**
     * Name of sub-field, if applicable. This may be a Cookie or Header name for instance
     */
    subField?: pulumi.Input<string>;
}

export interface IPLoadBalancingOrder {
    /**
     * date
     */
    date?: pulumi.Input<string>;
    /**
     * Information about a Bill entry
     */
    details?: pulumi.Input<pulumi.Input<inputs.IPLoadBalancingOrderDetail>[]>;
    /**
     * expiration date
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * order id
     */
    orderId?: pulumi.Input<number>;
}

export interface IPLoadBalancingOrderDetail {
    /**
     * description
     */
    description?: pulumi.Input<string>;
    /**
     * expiration date
     */
    domain?: pulumi.Input<string>;
    /**
     * order detail id
     */
    orderDetailId?: pulumi.Input<number>;
    /**
     * quantity
     */
    quantity?: pulumi.Input<string>;
}

export interface IPLoadBalancingOrderableZone {
    /**
     * The zone three letter code
     */
    name?: pulumi.Input<string>;
    /**
     * Plan code
     */
    planCode?: pulumi.Input<string>;
}

export interface IPLoadBalancingPlan {
    /**
     * Catalog name
     */
    catalogName?: pulumi.Input<string>;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.IPLoadBalancingPlanConfiguration>[]>;
    /**
     * duration
     */
    duration: pulumi.Input<string>;
    /**
     * Plan code
     */
    planCode: pulumi.Input<string>;
    /**
     * Pricing model identifier
     */
    pricingMode: pulumi.Input<string>;
}

export interface IPLoadBalancingPlanConfiguration {
    /**
     * Identifier of the resource
     */
    label: pulumi.Input<string>;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: pulumi.Input<string>;
}

export interface IPLoadBalancingPlanOption {
    /**
     * Catalog name
     */
    catalogName?: pulumi.Input<string>;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.IPLoadBalancingPlanOptionConfiguration>[]>;
    /**
     * duration
     */
    duration: pulumi.Input<string>;
    /**
     * Plan code
     */
    planCode: pulumi.Input<string>;
    /**
     * Pricing model identifier
     */
    pricingMode: pulumi.Input<string>;
}

export interface IPLoadBalancingPlanOptionConfiguration {
    /**
     * Identifier of the resource
     */
    label: pulumi.Input<string>;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: pulumi.Input<string>;
}

export interface IPLoadBalancingTCPFarmProbe {
    /**
     * Force use of SSL (TLS)
     */
    forceSsl?: pulumi.Input<boolean>;
    /**
     * probe interval, Value between 30 and 3600 seconds, default 30
     */
    interval?: pulumi.Input<number>;
    /**
     * What to mach `pattern` against (`contains`, `default`, `internal`, `matches`, `status`)
     */
    match?: pulumi.Input<string>;
    /**
     * HTTP probe method (`GET`, `HEAD`, `OPTIONS`, `internal`)
     */
    method?: pulumi.Input<string>;
    /**
     * Negate probe result
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Pattern to match against `match`
     */
    pattern?: pulumi.Input<string>;
    /**
     * Port for backends to recieve traffic on.
     */
    port?: pulumi.Input<number>;
    /**
     * Valid values : `http`, `internal`, `mysql`, `oco`, `pgsql`, `smtp`, `tcp`
     */
    type: pulumi.Input<string>;
    /**
     * URL for HTTP probe type.
     */
    url?: pulumi.Input<string>;
}

export interface IPLoadBalancingTCPRouteAction {
    /**
     * Farm ID for "farm" action type, empty for others.
     */
    target?: pulumi.Input<string>;
    /**
     * Action to trigger if all the rules of this route matches
     */
    type: pulumi.Input<string>;
}

export interface IPLoadBalancingTCPRouteRule {
    /**
     * Name of the field to match like "protocol" or "host" "/ipLoadbalancing/{serviceName}/route/availableRules" for a list of available rules
     */
    field?: pulumi.Input<string>;
    /**
     * Matching operator. Not all operators are available for all fields. See "availableRules"
     * * `negate`- Invert the matching operator effect
     */
    match?: pulumi.Input<string>;
    negate?: pulumi.Input<boolean>;
    /**
     * Value to match against this match. Interpretation if this field depends on the match and field
     */
    pattern?: pulumi.Input<string>;
    /**
     * Id of your rule
     */
    ruleId?: pulumi.Input<number>;
    /**
     * Name of sub-field, if applicable. This may be a Cookie or Header name for instance
     */
    subField?: pulumi.Input<string>;
}

export interface IPServiceOrder {
    /**
     * date
     */
    date?: pulumi.Input<string>;
    /**
     * Information about a Bill entry
     */
    details?: pulumi.Input<pulumi.Input<inputs.IPServiceOrderDetail>[]>;
    /**
     * expiration date
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * order id
     */
    orderId?: pulumi.Input<number>;
}

export interface IPServiceOrderDetail {
    /**
     * Custom description on your ip.
     */
    description?: pulumi.Input<string>;
    /**
     * expiration date
     */
    domain?: pulumi.Input<string>;
    /**
     * order detail id
     */
    orderDetailId?: pulumi.Input<number>;
    /**
     * quantity
     */
    quantity?: pulumi.Input<string>;
}

export interface IPServicePlan {
    /**
     * Catalog name
     */
    catalogName?: pulumi.Input<string>;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.IPServicePlanConfiguration>[]>;
    /**
     * duration
     */
    duration: pulumi.Input<string>;
    /**
     * Plan code
     */
    planCode: pulumi.Input<string>;
    /**
     * Pricing model identifier
     */
    pricingMode: pulumi.Input<string>;
}

export interface IPServicePlanConfiguration {
    /**
     * Identifier of the resource
     */
    label: pulumi.Input<string>;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: pulumi.Input<string>;
}

export interface IPServicePlanOption {
    /**
     * Catalog name
     */
    catalogName?: pulumi.Input<string>;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.IPServicePlanOptionConfiguration>[]>;
    /**
     * duration
     */
    duration: pulumi.Input<string>;
    /**
     * Plan code
     */
    planCode: pulumi.Input<string>;
    /**
     * Pricing model identifier
     */
    pricingMode: pulumi.Input<string>;
}

export interface IPServicePlanOptionConfiguration {
    /**
     * Identifier of the resource
     */
    label: pulumi.Input<string>;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: pulumi.Input<string>;
}

export interface IPServiceRoutedTo {
    /**
     * Service where ip is routed to
     * * `serviceName`: service name
     */
    serviceName?: pulumi.Input<string>;
}

export interface MeInstallationTemplateCustomization {
    /**
     * @deprecated field is not used anymore
     */
    changeLog?: pulumi.Input<string>;
    customHostname?: pulumi.Input<string>;
    postInstallationScriptLink?: pulumi.Input<string>;
    postInstallationScriptReturn?: pulumi.Input<string>;
    /**
     * @deprecated field is not used anymore
     */
    rating?: pulumi.Input<number>;
    sshKeyName?: pulumi.Input<string>;
    useDistributionKernel?: pulumi.Input<boolean>;
}

export interface VRackOrder {
    /**
     * date
     */
    date?: pulumi.Input<string>;
    /**
     * Information about a Bill entry
     */
    details?: pulumi.Input<pulumi.Input<inputs.VRackOrderDetail>[]>;
    /**
     * expiration date
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * order id
     */
    orderId?: pulumi.Input<number>;
}

export interface VRackOrderDetail {
    /**
     * yourvrackdescription
     */
    description?: pulumi.Input<string>;
    /**
     * expiration date
     */
    domain?: pulumi.Input<string>;
    /**
     * order detail id
     */
    orderDetailId?: pulumi.Input<number>;
    /**
     * quantity
     */
    quantity?: pulumi.Input<string>;
}

export interface VRackPlan {
    /**
     * Catalog name
     */
    catalogName?: pulumi.Input<string>;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.VRackPlanConfiguration>[]>;
    /**
     * duration
     */
    duration: pulumi.Input<string>;
    /**
     * Plan code
     */
    planCode: pulumi.Input<string>;
    /**
     * Pricing model identifier
     */
    pricingMode: pulumi.Input<string>;
}

export interface VRackPlanConfiguration {
    /**
     * Identifier of the resource
     */
    label: pulumi.Input<string>;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: pulumi.Input<string>;
}

export interface VRackPlanOption {
    /**
     * Catalog name
     */
    catalogName?: pulumi.Input<string>;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.VRackPlanOptionConfiguration>[]>;
    /**
     * duration
     */
    duration: pulumi.Input<string>;
    /**
     * Plan code
     */
    planCode: pulumi.Input<string>;
    /**
     * Pricing model identifier
     */
    pricingMode: pulumi.Input<string>;
}

export interface VRackPlanOptionConfiguration {
    /**
     * Identifier of the resource
     */
    label: pulumi.Input<string>;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: pulumi.Input<string>;
}
