# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetDBaaSLogsInputEngineResult',
    'AwaitableGetDBaaSLogsInputEngineResult',
    'get_d_baa_s_logs_input_engine',
    'get_d_baa_s_logs_input_engine_output',
]

@pulumi.output_type
class GetDBaaSLogsInputEngineResult:
    """
    A collection of values returned by getDBaaSLogsInputEngine.
    """
    def __init__(__self__, id=None, is_deprecated=None, name=None, version=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if is_deprecated and not isinstance(is_deprecated, bool):
            raise TypeError("Expected argument 'is_deprecated' to be a bool")
        pulumi.set(__self__, "is_deprecated", is_deprecated)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if version and not isinstance(version, str):
            raise TypeError("Expected argument 'version' to be a str")
        pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isDeprecated")
    def is_deprecated(self) -> bool:
        return pulumi.get(self, "is_deprecated")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def version(self) -> str:
        return pulumi.get(self, "version")


class AwaitableGetDBaaSLogsInputEngineResult(GetDBaaSLogsInputEngineResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDBaaSLogsInputEngineResult(
            id=self.id,
            is_deprecated=self.is_deprecated,
            name=self.name,
            version=self.version)


def get_d_baa_s_logs_input_engine(is_deprecated: Optional[bool] = None,
                                  name: Optional[str] = None,
                                  version: Optional[str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDBaaSLogsInputEngineResult:
    """
    Use this data source to retrieve information about a DBaas logs input engine.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ovh as ovh

    logstash = ovh.get_d_baa_s_logs_input_engine(is_deprecated=True,
        name="logstash",
        version="6.8")
    ```


    :param bool is_deprecated: Indicates if engine will soon not be supported.
    :param str name: The name of the logs input engine.
    :param str version: Software version
    """
    __args__ = dict()
    __args__['isDeprecated'] = is_deprecated
    __args__['name'] = name
    __args__['version'] = version
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('ovh:index/getDBaaSLogsInputEngine:getDBaaSLogsInputEngine', __args__, opts=opts, typ=GetDBaaSLogsInputEngineResult).value

    return AwaitableGetDBaaSLogsInputEngineResult(
        id=__ret__.id,
        is_deprecated=__ret__.is_deprecated,
        name=__ret__.name,
        version=__ret__.version)


@_utilities.lift_output_func(get_d_baa_s_logs_input_engine)
def get_d_baa_s_logs_input_engine_output(is_deprecated: Optional[pulumi.Input[Optional[bool]]] = None,
                                         name: Optional[pulumi.Input[Optional[str]]] = None,
                                         version: Optional[pulumi.Input[Optional[str]]] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDBaaSLogsInputEngineResult]:
    """
    Use this data source to retrieve information about a DBaas logs input engine.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ovh as ovh

    logstash = ovh.get_d_baa_s_logs_input_engine(is_deprecated=True,
        name="logstash",
        version="6.8")
    ```


    :param bool is_deprecated: Indicates if engine will soon not be supported.
    :param str name: The name of the logs input engine.
    :param str version: Software version
    """
    ...
