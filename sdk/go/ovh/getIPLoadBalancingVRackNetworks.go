// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of Vrack network ids available for your IPLoadbalancer associated with your OVH account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ovh.GetIPLoadBalancingVRackNetworks(ctx, &GetIPLoadBalancingVRackNetworksArgs{
// 			ServiceName: "XXXXXX",
// 			Subnet:      pulumi.StringRef("10.0.0.0/24"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetIPLoadBalancingVRackNetworks(ctx *pulumi.Context, args *GetIPLoadBalancingVRackNetworksArgs, opts ...pulumi.InvokeOption) (*GetIPLoadBalancingVRackNetworksResult, error) {
	var rv GetIPLoadBalancingVRackNetworksResult
	err := ctx.Invoke("ovh:index/getIPLoadBalancingVRackNetworks:getIPLoadBalancingVRackNetworks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIPLoadBalancingVRackNetworks.
type GetIPLoadBalancingVRackNetworksArgs struct {
	// The internal name of your IP load balancing
	ServiceName string `pulumi:"serviceName"`
	// Filters networks on the subnet.
	Subnet *string `pulumi:"subnet"`
	// Filters networks on the vlan id.
	VlanId *int `pulumi:"vlanId"`
}

// A collection of values returned by getIPLoadBalancingVRackNetworks.
type GetIPLoadBalancingVRackNetworksResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of vrack network ids.
	Results     []int   `pulumi:"results"`
	ServiceName string  `pulumi:"serviceName"`
	Subnet      *string `pulumi:"subnet"`
	VlanId      *int    `pulumi:"vlanId"`
}

func GetIPLoadBalancingVRackNetworksOutput(ctx *pulumi.Context, args GetIPLoadBalancingVRackNetworksOutputArgs, opts ...pulumi.InvokeOption) GetIPLoadBalancingVRackNetworksResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIPLoadBalancingVRackNetworksResult, error) {
			args := v.(GetIPLoadBalancingVRackNetworksArgs)
			r, err := GetIPLoadBalancingVRackNetworks(ctx, &args, opts...)
			var s GetIPLoadBalancingVRackNetworksResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIPLoadBalancingVRackNetworksResultOutput)
}

// A collection of arguments for invoking getIPLoadBalancingVRackNetworks.
type GetIPLoadBalancingVRackNetworksOutputArgs struct {
	// The internal name of your IP load balancing
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// Filters networks on the subnet.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
	// Filters networks on the vlan id.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (GetIPLoadBalancingVRackNetworksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIPLoadBalancingVRackNetworksArgs)(nil)).Elem()
}

// A collection of values returned by getIPLoadBalancingVRackNetworks.
type GetIPLoadBalancingVRackNetworksResultOutput struct{ *pulumi.OutputState }

func (GetIPLoadBalancingVRackNetworksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIPLoadBalancingVRackNetworksResult)(nil)).Elem()
}

func (o GetIPLoadBalancingVRackNetworksResultOutput) ToGetIPLoadBalancingVRackNetworksResultOutput() GetIPLoadBalancingVRackNetworksResultOutput {
	return o
}

func (o GetIPLoadBalancingVRackNetworksResultOutput) ToGetIPLoadBalancingVRackNetworksResultOutputWithContext(ctx context.Context) GetIPLoadBalancingVRackNetworksResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetIPLoadBalancingVRackNetworksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPLoadBalancingVRackNetworksResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of vrack network ids.
func (o GetIPLoadBalancingVRackNetworksResultOutput) Results() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetIPLoadBalancingVRackNetworksResult) []int { return v.Results }).(pulumi.IntArrayOutput)
}

func (o GetIPLoadBalancingVRackNetworksResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIPLoadBalancingVRackNetworksResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetIPLoadBalancingVRackNetworksResultOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIPLoadBalancingVRackNetworksResult) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

func (o GetIPLoadBalancingVRackNetworksResultOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetIPLoadBalancingVRackNetworksResult) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIPLoadBalancingVRackNetworksResultOutput{})
}
