// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to filter the list of container registry capabilities associated with a public cloud project to match one and only one capability.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ovh.GetCloudProjectCapabilitiesContainerregistryFilter(ctx, &GetCloudProjectCapabilitiesContainerregistryFilterArgs{
// 			PlanName:    "SMALL",
// 			Region:      "GRA",
// 			ServiceName: "XXXXXX",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetCloudProjectCapabilitiesContainerregistryFilter(ctx *pulumi.Context, args *GetCloudProjectCapabilitiesContainerregistryFilterArgs, opts ...pulumi.InvokeOption) (*GetCloudProjectCapabilitiesContainerregistryFilterResult, error) {
	var rv GetCloudProjectCapabilitiesContainerregistryFilterResult
	err := ctx.Invoke("ovh:index/getCloudProjectCapabilitiesContainerregistryFilter:getCloudProjectCapabilitiesContainerregistryFilter", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectCapabilitiesContainerregistryFilter.
type GetCloudProjectCapabilitiesContainerregistryFilterArgs struct {
	// The plan name
	PlanName string `pulumi:"planName"`
	// The region name
	Region string `pulumi:"region"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectCapabilitiesContainerregistryFilter.
type GetCloudProjectCapabilitiesContainerregistryFilterResult struct {
	// Plan code from the catalog
	Code string `pulumi:"code"`
	// Plan creation date
	CreatedAt string `pulumi:"createdAt"`
	// Features of the plan
	Features []GetCloudProjectCapabilitiesContainerregistryFilterFeature `pulumi:"features"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Plan name
	Name     string `pulumi:"name"`
	PlanName string `pulumi:"planName"`
	Region   string `pulumi:"region"`
	// Container registry limits
	RegistryLimits []GetCloudProjectCapabilitiesContainerregistryFilterRegistryLimit `pulumi:"registryLimits"`
	ServiceName    string                                                            `pulumi:"serviceName"`
	// Plan last update date
	UpdatedAt string `pulumi:"updatedAt"`
}

func GetCloudProjectCapabilitiesContainerregistryFilterOutput(ctx *pulumi.Context, args GetCloudProjectCapabilitiesContainerregistryFilterOutputArgs, opts ...pulumi.InvokeOption) GetCloudProjectCapabilitiesContainerregistryFilterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCloudProjectCapabilitiesContainerregistryFilterResult, error) {
			args := v.(GetCloudProjectCapabilitiesContainerregistryFilterArgs)
			r, err := GetCloudProjectCapabilitiesContainerregistryFilter(ctx, &args, opts...)
			var s GetCloudProjectCapabilitiesContainerregistryFilterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCloudProjectCapabilitiesContainerregistryFilterResultOutput)
}

// A collection of arguments for invoking getCloudProjectCapabilitiesContainerregistryFilter.
type GetCloudProjectCapabilitiesContainerregistryFilterOutputArgs struct {
	// The plan name
	PlanName pulumi.StringInput `pulumi:"planName"`
	// The region name
	Region pulumi.StringInput `pulumi:"region"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetCloudProjectCapabilitiesContainerregistryFilterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProjectCapabilitiesContainerregistryFilterArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectCapabilitiesContainerregistryFilter.
type GetCloudProjectCapabilitiesContainerregistryFilterResultOutput struct{ *pulumi.OutputState }

func (GetCloudProjectCapabilitiesContainerregistryFilterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProjectCapabilitiesContainerregistryFilterResult)(nil)).Elem()
}

func (o GetCloudProjectCapabilitiesContainerregistryFilterResultOutput) ToGetCloudProjectCapabilitiesContainerregistryFilterResultOutput() GetCloudProjectCapabilitiesContainerregistryFilterResultOutput {
	return o
}

func (o GetCloudProjectCapabilitiesContainerregistryFilterResultOutput) ToGetCloudProjectCapabilitiesContainerregistryFilterResultOutputWithContext(ctx context.Context) GetCloudProjectCapabilitiesContainerregistryFilterResultOutput {
	return o
}

// Plan code from the catalog
func (o GetCloudProjectCapabilitiesContainerregistryFilterResultOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerregistryFilterResult) string { return v.Code }).(pulumi.StringOutput)
}

// Plan creation date
func (o GetCloudProjectCapabilitiesContainerregistryFilterResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerregistryFilterResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Features of the plan
func (o GetCloudProjectCapabilitiesContainerregistryFilterResultOutput) Features() GetCloudProjectCapabilitiesContainerregistryFilterFeatureArrayOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerregistryFilterResult) []GetCloudProjectCapabilitiesContainerregistryFilterFeature {
		return v.Features
	}).(GetCloudProjectCapabilitiesContainerregistryFilterFeatureArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCloudProjectCapabilitiesContainerregistryFilterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerregistryFilterResult) string { return v.Id }).(pulumi.StringOutput)
}

// Plan name
func (o GetCloudProjectCapabilitiesContainerregistryFilterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerregistryFilterResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCloudProjectCapabilitiesContainerregistryFilterResultOutput) PlanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerregistryFilterResult) string { return v.PlanName }).(pulumi.StringOutput)
}

func (o GetCloudProjectCapabilitiesContainerregistryFilterResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerregistryFilterResult) string { return v.Region }).(pulumi.StringOutput)
}

// Container registry limits
func (o GetCloudProjectCapabilitiesContainerregistryFilterResultOutput) RegistryLimits() GetCloudProjectCapabilitiesContainerregistryFilterRegistryLimitArrayOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerregistryFilterResult) []GetCloudProjectCapabilitiesContainerregistryFilterRegistryLimit {
		return v.RegistryLimits
	}).(GetCloudProjectCapabilitiesContainerregistryFilterRegistryLimitArrayOutput)
}

func (o GetCloudProjectCapabilitiesContainerregistryFilterResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerregistryFilterResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// Plan last update date
func (o GetCloudProjectCapabilitiesContainerregistryFilterResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerregistryFilterResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCloudProjectCapabilitiesContainerregistryFilterResultOutput{})
}
