// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a dbaas logs input.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		logstash, err := ovh.GetDBaaSLogsInputEngine(ctx, &GetDBaaSLogsInputEngineArgs{
// 			Name:    pulumi.StringRef("logstash"),
// 			Version: pulumi.StringRef("7.x"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		stream, err := ovh.NewDBaaSLogsOutputGraylogStream(ctx, "stream", &ovh.DBaaSLogsOutputGraylogStreamArgs{
// 			ServiceName: pulumi.String("...."),
// 			Title:       pulumi.String("my stream"),
// 			Description: pulumi.String("my graylog stream"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = ovh.NewDBaaSLogsInput(ctx, "input", &ovh.DBaaSLogsInputArgs{
// 			ServiceName: stream.ServiceName,
// 			Description: stream.Description,
// 			Title:       stream.Title,
// 			EngineId:    pulumi.String(logstash.Id),
// 			StreamId:    stream.ID(),
// 			AllowedNetworks: pulumi.StringArray{
// 				pulumi.String("10.0.0.0/16"),
// 			},
// 			ExposedPort: pulumi.String("6154"),
// 			NbInstance:  pulumi.Int(2),
// 			Configuration: &DBaaSLogsInputConfigurationArgs{
// 				Logstash: &DBaaSLogsInputConfigurationLogstashArgs{
// 					InputSection: pulumi.String(fmt.Sprintf("%v%v%v%v%v%v", "beats {\n", "  port => 6514\n", "  ssl => true\n", "  ssl_certificate => \"/etc/ssl/private/server.crt\"\n", "  ssl_key => \"/etc/ssl/private/server.key\"\n", "}\n")),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type DBaaSLogsInput struct {
	pulumi.CustomResourceState

	// List of IP blocks
	AllowedNetworks pulumi.StringArrayOutput `pulumi:"allowedNetworks"`
	// Input configuration
	Configuration DBaaSLogsInputConfigurationOutput `pulumi:"configuration"`
	// Input creation
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Input description
	Description pulumi.StringOutput `pulumi:"description"`
	// Input engine ID
	EngineId pulumi.StringOutput `pulumi:"engineId"`
	// Port
	ExposedPort pulumi.StringOutput `pulumi:"exposedPort"`
	// Hostname
	Hostname pulumi.StringOutput `pulumi:"hostname"`
	// Input ID
	InputId pulumi.StringOutput `pulumi:"inputId"`
	// Indicate if input need to be restarted
	IsRestartRequired pulumi.BoolOutput `pulumi:"isRestartRequired"`
	// Number of instance running
	NbInstance pulumi.IntOutput `pulumi:"nbInstance"`
	// Input IP address
	PublicAddress pulumi.StringOutput `pulumi:"publicAddress"`
	// service name
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Input SSL certificate
	SslCertificate pulumi.StringOutput `pulumi:"sslCertificate"`
	// init: configuration required, pending: ready to start, running: available
	Status pulumi.StringOutput `pulumi:"status"`
	// Associated Graylog stream
	StreamId pulumi.StringOutput `pulumi:"streamId"`
	// Input title
	Title pulumi.StringOutput `pulumi:"title"`
	// Input last update
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewDBaaSLogsInput registers a new resource with the given unique name, arguments, and options.
func NewDBaaSLogsInput(ctx *pulumi.Context,
	name string, args *DBaaSLogsInputArgs, opts ...pulumi.ResourceOption) (*DBaaSLogsInput, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.EngineId == nil {
		return nil, errors.New("invalid value for required argument 'EngineId'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.StreamId == nil {
		return nil, errors.New("invalid value for required argument 'StreamId'")
	}
	if args.Title == nil {
		return nil, errors.New("invalid value for required argument 'Title'")
	}
	var resource DBaaSLogsInput
	err := ctx.RegisterResource("ovh:index/dBaaSLogsInput:DBaaSLogsInput", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDBaaSLogsInput gets an existing DBaaSLogsInput resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDBaaSLogsInput(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DBaaSLogsInputState, opts ...pulumi.ResourceOption) (*DBaaSLogsInput, error) {
	var resource DBaaSLogsInput
	err := ctx.ReadResource("ovh:index/dBaaSLogsInput:DBaaSLogsInput", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DBaaSLogsInput resources.
type dbaaSLogsInputState struct {
	// List of IP blocks
	AllowedNetworks []string `pulumi:"allowedNetworks"`
	// Input configuration
	Configuration *DBaaSLogsInputConfiguration `pulumi:"configuration"`
	// Input creation
	CreatedAt *string `pulumi:"createdAt"`
	// Input description
	Description *string `pulumi:"description"`
	// Input engine ID
	EngineId *string `pulumi:"engineId"`
	// Port
	ExposedPort *string `pulumi:"exposedPort"`
	// Hostname
	Hostname *string `pulumi:"hostname"`
	// Input ID
	InputId *string `pulumi:"inputId"`
	// Indicate if input need to be restarted
	IsRestartRequired *bool `pulumi:"isRestartRequired"`
	// Number of instance running
	NbInstance *int `pulumi:"nbInstance"`
	// Input IP address
	PublicAddress *string `pulumi:"publicAddress"`
	// service name
	ServiceName *string `pulumi:"serviceName"`
	// Input SSL certificate
	SslCertificate *string `pulumi:"sslCertificate"`
	// init: configuration required, pending: ready to start, running: available
	Status *string `pulumi:"status"`
	// Associated Graylog stream
	StreamId *string `pulumi:"streamId"`
	// Input title
	Title *string `pulumi:"title"`
	// Input last update
	UpdatedAt *string `pulumi:"updatedAt"`
}

type DBaaSLogsInputState struct {
	// List of IP blocks
	AllowedNetworks pulumi.StringArrayInput
	// Input configuration
	Configuration DBaaSLogsInputConfigurationPtrInput
	// Input creation
	CreatedAt pulumi.StringPtrInput
	// Input description
	Description pulumi.StringPtrInput
	// Input engine ID
	EngineId pulumi.StringPtrInput
	// Port
	ExposedPort pulumi.StringPtrInput
	// Hostname
	Hostname pulumi.StringPtrInput
	// Input ID
	InputId pulumi.StringPtrInput
	// Indicate if input need to be restarted
	IsRestartRequired pulumi.BoolPtrInput
	// Number of instance running
	NbInstance pulumi.IntPtrInput
	// Input IP address
	PublicAddress pulumi.StringPtrInput
	// service name
	ServiceName pulumi.StringPtrInput
	// Input SSL certificate
	SslCertificate pulumi.StringPtrInput
	// init: configuration required, pending: ready to start, running: available
	Status pulumi.StringPtrInput
	// Associated Graylog stream
	StreamId pulumi.StringPtrInput
	// Input title
	Title pulumi.StringPtrInput
	// Input last update
	UpdatedAt pulumi.StringPtrInput
}

func (DBaaSLogsInputState) ElementType() reflect.Type {
	return reflect.TypeOf((*dbaaSLogsInputState)(nil)).Elem()
}

type dbaaSLogsInputArgs struct {
	// List of IP blocks
	AllowedNetworks []string `pulumi:"allowedNetworks"`
	// Input configuration
	Configuration DBaaSLogsInputConfiguration `pulumi:"configuration"`
	// Input description
	Description string `pulumi:"description"`
	// Input engine ID
	EngineId string `pulumi:"engineId"`
	// Port
	ExposedPort *string `pulumi:"exposedPort"`
	// Number of instance running
	NbInstance *int `pulumi:"nbInstance"`
	// service name
	ServiceName string `pulumi:"serviceName"`
	// Associated Graylog stream
	StreamId string `pulumi:"streamId"`
	// Input title
	Title string `pulumi:"title"`
}

// The set of arguments for constructing a DBaaSLogsInput resource.
type DBaaSLogsInputArgs struct {
	// List of IP blocks
	AllowedNetworks pulumi.StringArrayInput
	// Input configuration
	Configuration DBaaSLogsInputConfigurationInput
	// Input description
	Description pulumi.StringInput
	// Input engine ID
	EngineId pulumi.StringInput
	// Port
	ExposedPort pulumi.StringPtrInput
	// Number of instance running
	NbInstance pulumi.IntPtrInput
	// service name
	ServiceName pulumi.StringInput
	// Associated Graylog stream
	StreamId pulumi.StringInput
	// Input title
	Title pulumi.StringInput
}

func (DBaaSLogsInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dbaaSLogsInputArgs)(nil)).Elem()
}

type DBaaSLogsInputInput interface {
	pulumi.Input

	ToDBaaSLogsInputOutput() DBaaSLogsInputOutput
	ToDBaaSLogsInputOutputWithContext(ctx context.Context) DBaaSLogsInputOutput
}

func (*DBaaSLogsInput) ElementType() reflect.Type {
	return reflect.TypeOf((**DBaaSLogsInput)(nil)).Elem()
}

func (i *DBaaSLogsInput) ToDBaaSLogsInputOutput() DBaaSLogsInputOutput {
	return i.ToDBaaSLogsInputOutputWithContext(context.Background())
}

func (i *DBaaSLogsInput) ToDBaaSLogsInputOutputWithContext(ctx context.Context) DBaaSLogsInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBaaSLogsInputOutput)
}

// DBaaSLogsInputArrayInput is an input type that accepts DBaaSLogsInputArray and DBaaSLogsInputArrayOutput values.
// You can construct a concrete instance of `DBaaSLogsInputArrayInput` via:
//
//          DBaaSLogsInputArray{ DBaaSLogsInputArgs{...} }
type DBaaSLogsInputArrayInput interface {
	pulumi.Input

	ToDBaaSLogsInputArrayOutput() DBaaSLogsInputArrayOutput
	ToDBaaSLogsInputArrayOutputWithContext(context.Context) DBaaSLogsInputArrayOutput
}

type DBaaSLogsInputArray []DBaaSLogsInputInput

func (DBaaSLogsInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DBaaSLogsInput)(nil)).Elem()
}

func (i DBaaSLogsInputArray) ToDBaaSLogsInputArrayOutput() DBaaSLogsInputArrayOutput {
	return i.ToDBaaSLogsInputArrayOutputWithContext(context.Background())
}

func (i DBaaSLogsInputArray) ToDBaaSLogsInputArrayOutputWithContext(ctx context.Context) DBaaSLogsInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBaaSLogsInputArrayOutput)
}

// DBaaSLogsInputMapInput is an input type that accepts DBaaSLogsInputMap and DBaaSLogsInputMapOutput values.
// You can construct a concrete instance of `DBaaSLogsInputMapInput` via:
//
//          DBaaSLogsInputMap{ "key": DBaaSLogsInputArgs{...} }
type DBaaSLogsInputMapInput interface {
	pulumi.Input

	ToDBaaSLogsInputMapOutput() DBaaSLogsInputMapOutput
	ToDBaaSLogsInputMapOutputWithContext(context.Context) DBaaSLogsInputMapOutput
}

type DBaaSLogsInputMap map[string]DBaaSLogsInputInput

func (DBaaSLogsInputMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DBaaSLogsInput)(nil)).Elem()
}

func (i DBaaSLogsInputMap) ToDBaaSLogsInputMapOutput() DBaaSLogsInputMapOutput {
	return i.ToDBaaSLogsInputMapOutputWithContext(context.Background())
}

func (i DBaaSLogsInputMap) ToDBaaSLogsInputMapOutputWithContext(ctx context.Context) DBaaSLogsInputMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBaaSLogsInputMapOutput)
}

type DBaaSLogsInputOutput struct{ *pulumi.OutputState }

func (DBaaSLogsInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DBaaSLogsInput)(nil)).Elem()
}

func (o DBaaSLogsInputOutput) ToDBaaSLogsInputOutput() DBaaSLogsInputOutput {
	return o
}

func (o DBaaSLogsInputOutput) ToDBaaSLogsInputOutputWithContext(ctx context.Context) DBaaSLogsInputOutput {
	return o
}

// List of IP blocks
func (o DBaaSLogsInputOutput) AllowedNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) pulumi.StringArrayOutput { return v.AllowedNetworks }).(pulumi.StringArrayOutput)
}

// Input configuration
func (o DBaaSLogsInputOutput) Configuration() DBaaSLogsInputConfigurationOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) DBaaSLogsInputConfigurationOutput { return v.Configuration }).(DBaaSLogsInputConfigurationOutput)
}

// Input creation
func (o DBaaSLogsInputOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Input description
func (o DBaaSLogsInputOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Input engine ID
func (o DBaaSLogsInputOutput) EngineId() pulumi.StringOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) pulumi.StringOutput { return v.EngineId }).(pulumi.StringOutput)
}

// Port
func (o DBaaSLogsInputOutput) ExposedPort() pulumi.StringOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) pulumi.StringOutput { return v.ExposedPort }).(pulumi.StringOutput)
}

// Hostname
func (o DBaaSLogsInputOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) pulumi.StringOutput { return v.Hostname }).(pulumi.StringOutput)
}

// Input ID
func (o DBaaSLogsInputOutput) InputId() pulumi.StringOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) pulumi.StringOutput { return v.InputId }).(pulumi.StringOutput)
}

// Indicate if input need to be restarted
func (o DBaaSLogsInputOutput) IsRestartRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) pulumi.BoolOutput { return v.IsRestartRequired }).(pulumi.BoolOutput)
}

// Number of instance running
func (o DBaaSLogsInputOutput) NbInstance() pulumi.IntOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) pulumi.IntOutput { return v.NbInstance }).(pulumi.IntOutput)
}

// Input IP address
func (o DBaaSLogsInputOutput) PublicAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) pulumi.StringOutput { return v.PublicAddress }).(pulumi.StringOutput)
}

// service name
func (o DBaaSLogsInputOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Input SSL certificate
func (o DBaaSLogsInputOutput) SslCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) pulumi.StringOutput { return v.SslCertificate }).(pulumi.StringOutput)
}

// init: configuration required, pending: ready to start, running: available
func (o DBaaSLogsInputOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Associated Graylog stream
func (o DBaaSLogsInputOutput) StreamId() pulumi.StringOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) pulumi.StringOutput { return v.StreamId }).(pulumi.StringOutput)
}

// Input title
func (o DBaaSLogsInputOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

// Input last update
func (o DBaaSLogsInputOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DBaaSLogsInput) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type DBaaSLogsInputArrayOutput struct{ *pulumi.OutputState }

func (DBaaSLogsInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DBaaSLogsInput)(nil)).Elem()
}

func (o DBaaSLogsInputArrayOutput) ToDBaaSLogsInputArrayOutput() DBaaSLogsInputArrayOutput {
	return o
}

func (o DBaaSLogsInputArrayOutput) ToDBaaSLogsInputArrayOutputWithContext(ctx context.Context) DBaaSLogsInputArrayOutput {
	return o
}

func (o DBaaSLogsInputArrayOutput) Index(i pulumi.IntInput) DBaaSLogsInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DBaaSLogsInput {
		return vs[0].([]*DBaaSLogsInput)[vs[1].(int)]
	}).(DBaaSLogsInputOutput)
}

type DBaaSLogsInputMapOutput struct{ *pulumi.OutputState }

func (DBaaSLogsInputMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DBaaSLogsInput)(nil)).Elem()
}

func (o DBaaSLogsInputMapOutput) ToDBaaSLogsInputMapOutput() DBaaSLogsInputMapOutput {
	return o
}

func (o DBaaSLogsInputMapOutput) ToDBaaSLogsInputMapOutputWithContext(ctx context.Context) DBaaSLogsInputMapOutput {
	return o
}

func (o DBaaSLogsInputMapOutput) MapIndex(k pulumi.StringInput) DBaaSLogsInputOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DBaaSLogsInput {
		return vs[0].(map[string]*DBaaSLogsInput)[vs[1].(string)]
	}).(DBaaSLogsInputOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DBaaSLogsInputInput)(nil)).Elem(), &DBaaSLogsInput{})
	pulumi.RegisterInputType(reflect.TypeOf((*DBaaSLogsInputArrayInput)(nil)).Elem(), DBaaSLogsInputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DBaaSLogsInputMapInput)(nil)).Elem(), DBaaSLogsInputMap{})
	pulumi.RegisterOutputType(DBaaSLogsInputOutput{})
	pulumi.RegisterOutputType(DBaaSLogsInputArrayOutput{})
	pulumi.RegisterOutputType(DBaaSLogsInputMapOutput{})
}
