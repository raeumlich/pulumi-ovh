// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Orders an IP load balancing.
//
// ## Important
//
// This resource orders an OVH product for a long period of time and may generate heavy costs !
// Use with caution.
//
// __NOTE__ 1: the "default-payment-mean" will scan your registered bank accounts, credit card and paypal payment means to find your default payment mean.
//
// __NOTE__ 2: this resource is in beta state. Use with caution.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		mycart, err := ovh.GetOrderCart(ctx, &GetOrderCartArgs{
// 			OvhSubsidiary: "fr",
// 			Description:   pulumi.StringRef("mycart"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		iplb, err := ovh.GetProductCartProductPlan(ctx, &GetProductCartProductPlanArgs{
// 			CartId:        mycart.Id,
// 			PriceCapacity: "renew",
// 			Product:       "ipLoadbalancing",
// 			PlanCode:      "iplb-lb1",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		bhs, err := ovh.GetOrderCartProductOptionsPlan(ctx, &GetOrderCartProductOptionsPlanArgs{
// 			CartId:          iplb.CartId,
// 			PriceCapacity:   iplb.PriceCapacity,
// 			Product:         iplb.Product,
// 			PlanCode:        iplb.PlanCode,
// 			OptionsPlanCode: "iplb-zone-lb1-rbx",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = ovh.NewIPLoadBalancing(ctx, "iplb-lb1", &ovh.IPLoadBalancingArgs{
// 			OvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),
// 			DisplayName:   pulumi.String("my ip loadbalancing"),
// 			PaymentMean:   pulumi.String("ovh-account"),
// 			Plan: &IPLoadBalancingPlanArgs{
// 				Duration:    pulumi.String(iplb.SelectedPrices[0].Duration),
// 				PlanCode:    pulumi.String(iplb.PlanCode),
// 				PricingMode: pulumi.String(iplb.SelectedPrices[0].PricingMode),
// 			},
// 			PlanOptions: IPLoadBalancingPlanOptionArray{
// 				&IPLoadBalancingPlanOptionArgs{
// 					Duration:    pulumi.String(bhs.SelectedPrices[0].Duration),
// 					PlanCode:    pulumi.String(bhs.PlanCode),
// 					PricingMode: pulumi.String(bhs.SelectedPrices[0].PricingMode),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type IPLoadBalancing struct {
	pulumi.CustomResourceState

	// Set the name displayed in ManagerV6 for your iplb (max 50 chars)
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Your IP load balancing
	IpLoadbalancing pulumi.StringOutput `pulumi:"ipLoadbalancing"`
	// The IPV4 associated to your IP load balancing
	Ipv4 pulumi.StringOutput `pulumi:"ipv4"`
	// The IPV6 associated to your IP load balancing. DEPRECATED.
	Ipv6 pulumi.StringOutput `pulumi:"ipv6"`
	// The metrics token associated with your IP load balancing
	MetricsToken pulumi.StringOutput `pulumi:"metricsToken"`
	// The offer of your IP load balancing
	Offer pulumi.StringOutput `pulumi:"offer"`
	// Available additional zone for your Load Balancer
	OrderableZones IPLoadBalancingOrderableZoneArrayOutput `pulumi:"orderableZones"`
	// Details about an Order
	Orders IPLoadBalancingOrderArrayOutput `pulumi:"orders"`
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringOutput `pulumi:"ovhSubsidiary"`
	// Ovh payment mode (One of "default-payment-mean", "fidelity", "ovh-account")
	PaymentMean pulumi.StringOutput `pulumi:"paymentMean"`
	// Product Plan to order
	Plan IPLoadBalancingPlanOutput `pulumi:"plan"`
	// Product Plan to order
	PlanOptions IPLoadBalancingPlanOptionArrayOutput `pulumi:"planOptions"`
	// The internal name of your IP load balancing
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null. one of "intermediate", "modern".
	SslConfiguration pulumi.StringOutput `pulumi:"sslConfiguration"`
	// Current state of your IP
	State pulumi.StringOutput `pulumi:"state"`
	// Vrack eligibility
	VrackEligibility pulumi.BoolOutput `pulumi:"vrackEligibility"`
	// Name of the vRack on which the current Load Balancer is attached to, as it is named on vRack product
	VrackName pulumi.StringOutput `pulumi:"vrackName"`
	// Location where your service is
	Zones pulumi.StringArrayOutput `pulumi:"zones"`
}

// NewIPLoadBalancing registers a new resource with the given unique name, arguments, and options.
func NewIPLoadBalancing(ctx *pulumi.Context,
	name string, args *IPLoadBalancingArgs, opts ...pulumi.ResourceOption) (*IPLoadBalancing, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OvhSubsidiary == nil {
		return nil, errors.New("invalid value for required argument 'OvhSubsidiary'")
	}
	if args.PaymentMean == nil {
		return nil, errors.New("invalid value for required argument 'PaymentMean'")
	}
	if args.Plan == nil {
		return nil, errors.New("invalid value for required argument 'Plan'")
	}
	var resource IPLoadBalancing
	err := ctx.RegisterResource("ovh:index/iPLoadBalancing:IPLoadBalancing", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIPLoadBalancing gets an existing IPLoadBalancing resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIPLoadBalancing(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IPLoadBalancingState, opts ...pulumi.ResourceOption) (*IPLoadBalancing, error) {
	var resource IPLoadBalancing
	err := ctx.ReadResource("ovh:index/iPLoadBalancing:IPLoadBalancing", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IPLoadBalancing resources.
type iploadBalancingState struct {
	// Set the name displayed in ManagerV6 for your iplb (max 50 chars)
	DisplayName *string `pulumi:"displayName"`
	// Your IP load balancing
	IpLoadbalancing *string `pulumi:"ipLoadbalancing"`
	// The IPV4 associated to your IP load balancing
	Ipv4 *string `pulumi:"ipv4"`
	// The IPV6 associated to your IP load balancing. DEPRECATED.
	Ipv6 *string `pulumi:"ipv6"`
	// The metrics token associated with your IP load balancing
	MetricsToken *string `pulumi:"metricsToken"`
	// The offer of your IP load balancing
	Offer *string `pulumi:"offer"`
	// Available additional zone for your Load Balancer
	OrderableZones []IPLoadBalancingOrderableZone `pulumi:"orderableZones"`
	// Details about an Order
	Orders []IPLoadBalancingOrder `pulumi:"orders"`
	// Ovh Subsidiary
	OvhSubsidiary *string `pulumi:"ovhSubsidiary"`
	// Ovh payment mode (One of "default-payment-mean", "fidelity", "ovh-account")
	PaymentMean *string `pulumi:"paymentMean"`
	// Product Plan to order
	Plan *IPLoadBalancingPlan `pulumi:"plan"`
	// Product Plan to order
	PlanOptions []IPLoadBalancingPlanOption `pulumi:"planOptions"`
	// The internal name of your IP load balancing
	ServiceName *string `pulumi:"serviceName"`
	// Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null. one of "intermediate", "modern".
	SslConfiguration *string `pulumi:"sslConfiguration"`
	// Current state of your IP
	State *string `pulumi:"state"`
	// Vrack eligibility
	VrackEligibility *bool `pulumi:"vrackEligibility"`
	// Name of the vRack on which the current Load Balancer is attached to, as it is named on vRack product
	VrackName *string `pulumi:"vrackName"`
	// Location where your service is
	Zones []string `pulumi:"zones"`
}

type IPLoadBalancingState struct {
	// Set the name displayed in ManagerV6 for your iplb (max 50 chars)
	DisplayName pulumi.StringPtrInput
	// Your IP load balancing
	IpLoadbalancing pulumi.StringPtrInput
	// The IPV4 associated to your IP load balancing
	Ipv4 pulumi.StringPtrInput
	// The IPV6 associated to your IP load balancing. DEPRECATED.
	Ipv6 pulumi.StringPtrInput
	// The metrics token associated with your IP load balancing
	MetricsToken pulumi.StringPtrInput
	// The offer of your IP load balancing
	Offer pulumi.StringPtrInput
	// Available additional zone for your Load Balancer
	OrderableZones IPLoadBalancingOrderableZoneArrayInput
	// Details about an Order
	Orders IPLoadBalancingOrderArrayInput
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringPtrInput
	// Ovh payment mode (One of "default-payment-mean", "fidelity", "ovh-account")
	PaymentMean pulumi.StringPtrInput
	// Product Plan to order
	Plan IPLoadBalancingPlanPtrInput
	// Product Plan to order
	PlanOptions IPLoadBalancingPlanOptionArrayInput
	// The internal name of your IP load balancing
	ServiceName pulumi.StringPtrInput
	// Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null. one of "intermediate", "modern".
	SslConfiguration pulumi.StringPtrInput
	// Current state of your IP
	State pulumi.StringPtrInput
	// Vrack eligibility
	VrackEligibility pulumi.BoolPtrInput
	// Name of the vRack on which the current Load Balancer is attached to, as it is named on vRack product
	VrackName pulumi.StringPtrInput
	// Location where your service is
	Zones pulumi.StringArrayInput
}

func (IPLoadBalancingState) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadBalancingState)(nil)).Elem()
}

type iploadBalancingArgs struct {
	// Set the name displayed in ManagerV6 for your iplb (max 50 chars)
	DisplayName *string `pulumi:"displayName"`
	// Ovh Subsidiary
	OvhSubsidiary string `pulumi:"ovhSubsidiary"`
	// Ovh payment mode (One of "default-payment-mean", "fidelity", "ovh-account")
	PaymentMean string `pulumi:"paymentMean"`
	// Product Plan to order
	Plan IPLoadBalancingPlan `pulumi:"plan"`
	// Product Plan to order
	PlanOptions []IPLoadBalancingPlanOption `pulumi:"planOptions"`
	// Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null. one of "intermediate", "modern".
	SslConfiguration *string `pulumi:"sslConfiguration"`
}

// The set of arguments for constructing a IPLoadBalancing resource.
type IPLoadBalancingArgs struct {
	// Set the name displayed in ManagerV6 for your iplb (max 50 chars)
	DisplayName pulumi.StringPtrInput
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringInput
	// Ovh payment mode (One of "default-payment-mean", "fidelity", "ovh-account")
	PaymentMean pulumi.StringInput
	// Product Plan to order
	Plan IPLoadBalancingPlanInput
	// Product Plan to order
	PlanOptions IPLoadBalancingPlanOptionArrayInput
	// Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null. one of "intermediate", "modern".
	SslConfiguration pulumi.StringPtrInput
}

func (IPLoadBalancingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadBalancingArgs)(nil)).Elem()
}

type IPLoadBalancingInput interface {
	pulumi.Input

	ToIPLoadBalancingOutput() IPLoadBalancingOutput
	ToIPLoadBalancingOutputWithContext(ctx context.Context) IPLoadBalancingOutput
}

func (*IPLoadBalancing) ElementType() reflect.Type {
	return reflect.TypeOf((**IPLoadBalancing)(nil)).Elem()
}

func (i *IPLoadBalancing) ToIPLoadBalancingOutput() IPLoadBalancingOutput {
	return i.ToIPLoadBalancingOutputWithContext(context.Background())
}

func (i *IPLoadBalancing) ToIPLoadBalancingOutputWithContext(ctx context.Context) IPLoadBalancingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPLoadBalancingOutput)
}

// IPLoadBalancingArrayInput is an input type that accepts IPLoadBalancingArray and IPLoadBalancingArrayOutput values.
// You can construct a concrete instance of `IPLoadBalancingArrayInput` via:
//
//          IPLoadBalancingArray{ IPLoadBalancingArgs{...} }
type IPLoadBalancingArrayInput interface {
	pulumi.Input

	ToIPLoadBalancingArrayOutput() IPLoadBalancingArrayOutput
	ToIPLoadBalancingArrayOutputWithContext(context.Context) IPLoadBalancingArrayOutput
}

type IPLoadBalancingArray []IPLoadBalancingInput

func (IPLoadBalancingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IPLoadBalancing)(nil)).Elem()
}

func (i IPLoadBalancingArray) ToIPLoadBalancingArrayOutput() IPLoadBalancingArrayOutput {
	return i.ToIPLoadBalancingArrayOutputWithContext(context.Background())
}

func (i IPLoadBalancingArray) ToIPLoadBalancingArrayOutputWithContext(ctx context.Context) IPLoadBalancingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPLoadBalancingArrayOutput)
}

// IPLoadBalancingMapInput is an input type that accepts IPLoadBalancingMap and IPLoadBalancingMapOutput values.
// You can construct a concrete instance of `IPLoadBalancingMapInput` via:
//
//          IPLoadBalancingMap{ "key": IPLoadBalancingArgs{...} }
type IPLoadBalancingMapInput interface {
	pulumi.Input

	ToIPLoadBalancingMapOutput() IPLoadBalancingMapOutput
	ToIPLoadBalancingMapOutputWithContext(context.Context) IPLoadBalancingMapOutput
}

type IPLoadBalancingMap map[string]IPLoadBalancingInput

func (IPLoadBalancingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IPLoadBalancing)(nil)).Elem()
}

func (i IPLoadBalancingMap) ToIPLoadBalancingMapOutput() IPLoadBalancingMapOutput {
	return i.ToIPLoadBalancingMapOutputWithContext(context.Background())
}

func (i IPLoadBalancingMap) ToIPLoadBalancingMapOutputWithContext(ctx context.Context) IPLoadBalancingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPLoadBalancingMapOutput)
}

type IPLoadBalancingOutput struct{ *pulumi.OutputState }

func (IPLoadBalancingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPLoadBalancing)(nil)).Elem()
}

func (o IPLoadBalancingOutput) ToIPLoadBalancingOutput() IPLoadBalancingOutput {
	return o
}

func (o IPLoadBalancingOutput) ToIPLoadBalancingOutputWithContext(ctx context.Context) IPLoadBalancingOutput {
	return o
}

// Set the name displayed in ManagerV6 for your iplb (max 50 chars)
func (o IPLoadBalancingOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *IPLoadBalancing) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Your IP load balancing
func (o IPLoadBalancingOutput) IpLoadbalancing() pulumi.StringOutput {
	return o.ApplyT(func(v *IPLoadBalancing) pulumi.StringOutput { return v.IpLoadbalancing }).(pulumi.StringOutput)
}

// The IPV4 associated to your IP load balancing
func (o IPLoadBalancingOutput) Ipv4() pulumi.StringOutput {
	return o.ApplyT(func(v *IPLoadBalancing) pulumi.StringOutput { return v.Ipv4 }).(pulumi.StringOutput)
}

// The IPV6 associated to your IP load balancing. DEPRECATED.
func (o IPLoadBalancingOutput) Ipv6() pulumi.StringOutput {
	return o.ApplyT(func(v *IPLoadBalancing) pulumi.StringOutput { return v.Ipv6 }).(pulumi.StringOutput)
}

// The metrics token associated with your IP load balancing
func (o IPLoadBalancingOutput) MetricsToken() pulumi.StringOutput {
	return o.ApplyT(func(v *IPLoadBalancing) pulumi.StringOutput { return v.MetricsToken }).(pulumi.StringOutput)
}

// The offer of your IP load balancing
func (o IPLoadBalancingOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v *IPLoadBalancing) pulumi.StringOutput { return v.Offer }).(pulumi.StringOutput)
}

// Available additional zone for your Load Balancer
func (o IPLoadBalancingOutput) OrderableZones() IPLoadBalancingOrderableZoneArrayOutput {
	return o.ApplyT(func(v *IPLoadBalancing) IPLoadBalancingOrderableZoneArrayOutput { return v.OrderableZones }).(IPLoadBalancingOrderableZoneArrayOutput)
}

// Details about an Order
func (o IPLoadBalancingOutput) Orders() IPLoadBalancingOrderArrayOutput {
	return o.ApplyT(func(v *IPLoadBalancing) IPLoadBalancingOrderArrayOutput { return v.Orders }).(IPLoadBalancingOrderArrayOutput)
}

// Ovh Subsidiary
func (o IPLoadBalancingOutput) OvhSubsidiary() pulumi.StringOutput {
	return o.ApplyT(func(v *IPLoadBalancing) pulumi.StringOutput { return v.OvhSubsidiary }).(pulumi.StringOutput)
}

// Ovh payment mode (One of "default-payment-mean", "fidelity", "ovh-account")
func (o IPLoadBalancingOutput) PaymentMean() pulumi.StringOutput {
	return o.ApplyT(func(v *IPLoadBalancing) pulumi.StringOutput { return v.PaymentMean }).(pulumi.StringOutput)
}

// Product Plan to order
func (o IPLoadBalancingOutput) Plan() IPLoadBalancingPlanOutput {
	return o.ApplyT(func(v *IPLoadBalancing) IPLoadBalancingPlanOutput { return v.Plan }).(IPLoadBalancingPlanOutput)
}

// Product Plan to order
func (o IPLoadBalancingOutput) PlanOptions() IPLoadBalancingPlanOptionArrayOutput {
	return o.ApplyT(func(v *IPLoadBalancing) IPLoadBalancingPlanOptionArrayOutput { return v.PlanOptions }).(IPLoadBalancingPlanOptionArrayOutput)
}

// The internal name of your IP load balancing
func (o IPLoadBalancingOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *IPLoadBalancing) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null. one of "intermediate", "modern".
func (o IPLoadBalancingOutput) SslConfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v *IPLoadBalancing) pulumi.StringOutput { return v.SslConfiguration }).(pulumi.StringOutput)
}

// Current state of your IP
func (o IPLoadBalancingOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *IPLoadBalancing) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Vrack eligibility
func (o IPLoadBalancingOutput) VrackEligibility() pulumi.BoolOutput {
	return o.ApplyT(func(v *IPLoadBalancing) pulumi.BoolOutput { return v.VrackEligibility }).(pulumi.BoolOutput)
}

// Name of the vRack on which the current Load Balancer is attached to, as it is named on vRack product
func (o IPLoadBalancingOutput) VrackName() pulumi.StringOutput {
	return o.ApplyT(func(v *IPLoadBalancing) pulumi.StringOutput { return v.VrackName }).(pulumi.StringOutput)
}

// Location where your service is
func (o IPLoadBalancingOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IPLoadBalancing) pulumi.StringArrayOutput { return v.Zones }).(pulumi.StringArrayOutput)
}

type IPLoadBalancingArrayOutput struct{ *pulumi.OutputState }

func (IPLoadBalancingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IPLoadBalancing)(nil)).Elem()
}

func (o IPLoadBalancingArrayOutput) ToIPLoadBalancingArrayOutput() IPLoadBalancingArrayOutput {
	return o
}

func (o IPLoadBalancingArrayOutput) ToIPLoadBalancingArrayOutputWithContext(ctx context.Context) IPLoadBalancingArrayOutput {
	return o
}

func (o IPLoadBalancingArrayOutput) Index(i pulumi.IntInput) IPLoadBalancingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IPLoadBalancing {
		return vs[0].([]*IPLoadBalancing)[vs[1].(int)]
	}).(IPLoadBalancingOutput)
}

type IPLoadBalancingMapOutput struct{ *pulumi.OutputState }

func (IPLoadBalancingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IPLoadBalancing)(nil)).Elem()
}

func (o IPLoadBalancingMapOutput) ToIPLoadBalancingMapOutput() IPLoadBalancingMapOutput {
	return o
}

func (o IPLoadBalancingMapOutput) ToIPLoadBalancingMapOutputWithContext(ctx context.Context) IPLoadBalancingMapOutput {
	return o
}

func (o IPLoadBalancingMapOutput) MapIndex(k pulumi.StringInput) IPLoadBalancingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IPLoadBalancing {
		return vs[0].(map[string]*IPLoadBalancing)[vs[1].(string)]
	}).(IPLoadBalancingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IPLoadBalancingInput)(nil)).Elem(), &IPLoadBalancing{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPLoadBalancingArrayInput)(nil)).Elem(), IPLoadBalancingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPLoadBalancingMapInput)(nil)).Elem(), IPLoadBalancingMap{})
	pulumi.RegisterOutputType(IPLoadBalancingOutput{})
	pulumi.RegisterOutputType(IPLoadBalancingArrayOutput{})
	pulumi.RegisterOutputType(IPLoadBalancingMapOutput{})
}
