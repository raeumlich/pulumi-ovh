// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manage rules for TCP route.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		reject, err := ovh.NewIPLoadBalancingTCPRoute(ctx, "reject", &ovh.IPLoadBalancingTCPRouteArgs{
// 			ServiceName: pulumi.String("loadbalancer-xxxxxxxxxxxxxxxxxx"),
// 			Weight:      pulumi.Int(1),
// 			FrontendId:  pulumi.Int(11111),
// 			Action: &IPLoadBalancingTCPRouteActionArgs{
// 				Type: pulumi.String("reject"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = ovh.NewIPLoadBalancingTCPRouteRule(ctx, "examplerule", &ovh.IPLoadBalancingTCPRouteRuleArgs{
// 			ServiceName: pulumi.String("loadbalancer-xxxxxxxxxxxxxxxxxx"),
// 			RouteId:     reject.ID(),
// 			DisplayName: pulumi.String("Match example.com host"),
// 			Field:       pulumi.String("sni"),
// 			Match:       pulumi.String("is"),
// 			Negate:      pulumi.Bool(false),
// 			Pattern:     pulumi.String("example.com"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type IPLoadBalancingTCPRouteRule struct {
	pulumi.CustomResourceState

	// Human readable name for your rule, this field is for you
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Name of the field to match like "protocol" or "host". See "/ipLoadbalancing/{serviceName}/availableRouteRules" for a list of available rules
	Field pulumi.StringOutput `pulumi:"field"`
	// Matching operator. Not all operators are available for all fields. See "/ipLoadbalancing/{serviceName}/availableRouteRules"
	Match pulumi.StringOutput `pulumi:"match"`
	// Invert the matching operator effect
	Negate pulumi.BoolOutput `pulumi:"negate"`
	// Value to match against this match. Interpretation if this field depends on the match and field
	Pattern pulumi.StringPtrOutput `pulumi:"pattern"`
	// The route to apply this rule
	RouteId pulumi.StringOutput `pulumi:"routeId"`
	// The internal name of your IP load balancing
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Name of sub-field, if applicable. This may be a Cookie or Header name for instance
	SubField pulumi.StringPtrOutput `pulumi:"subField"`
}

// NewIPLoadBalancingTCPRouteRule registers a new resource with the given unique name, arguments, and options.
func NewIPLoadBalancingTCPRouteRule(ctx *pulumi.Context,
	name string, args *IPLoadBalancingTCPRouteRuleArgs, opts ...pulumi.ResourceOption) (*IPLoadBalancingTCPRouteRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Field == nil {
		return nil, errors.New("invalid value for required argument 'Field'")
	}
	if args.Match == nil {
		return nil, errors.New("invalid value for required argument 'Match'")
	}
	if args.RouteId == nil {
		return nil, errors.New("invalid value for required argument 'RouteId'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	var resource IPLoadBalancingTCPRouteRule
	err := ctx.RegisterResource("ovh:index/iPLoadBalancingTCPRouteRule:IPLoadBalancingTCPRouteRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIPLoadBalancingTCPRouteRule gets an existing IPLoadBalancingTCPRouteRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIPLoadBalancingTCPRouteRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IPLoadBalancingTCPRouteRuleState, opts ...pulumi.ResourceOption) (*IPLoadBalancingTCPRouteRule, error) {
	var resource IPLoadBalancingTCPRouteRule
	err := ctx.ReadResource("ovh:index/iPLoadBalancingTCPRouteRule:IPLoadBalancingTCPRouteRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IPLoadBalancingTCPRouteRule resources.
type iploadBalancingTCPRouteRuleState struct {
	// Human readable name for your rule, this field is for you
	DisplayName *string `pulumi:"displayName"`
	// Name of the field to match like "protocol" or "host". See "/ipLoadbalancing/{serviceName}/availableRouteRules" for a list of available rules
	Field *string `pulumi:"field"`
	// Matching operator. Not all operators are available for all fields. See "/ipLoadbalancing/{serviceName}/availableRouteRules"
	Match *string `pulumi:"match"`
	// Invert the matching operator effect
	Negate *bool `pulumi:"negate"`
	// Value to match against this match. Interpretation if this field depends on the match and field
	Pattern *string `pulumi:"pattern"`
	// The route to apply this rule
	RouteId *string `pulumi:"routeId"`
	// The internal name of your IP load balancing
	ServiceName *string `pulumi:"serviceName"`
	// Name of sub-field, if applicable. This may be a Cookie or Header name for instance
	SubField *string `pulumi:"subField"`
}

type IPLoadBalancingTCPRouteRuleState struct {
	// Human readable name for your rule, this field is for you
	DisplayName pulumi.StringPtrInput
	// Name of the field to match like "protocol" or "host". See "/ipLoadbalancing/{serviceName}/availableRouteRules" for a list of available rules
	Field pulumi.StringPtrInput
	// Matching operator. Not all operators are available for all fields. See "/ipLoadbalancing/{serviceName}/availableRouteRules"
	Match pulumi.StringPtrInput
	// Invert the matching operator effect
	Negate pulumi.BoolPtrInput
	// Value to match against this match. Interpretation if this field depends on the match and field
	Pattern pulumi.StringPtrInput
	// The route to apply this rule
	RouteId pulumi.StringPtrInput
	// The internal name of your IP load balancing
	ServiceName pulumi.StringPtrInput
	// Name of sub-field, if applicable. This may be a Cookie or Header name for instance
	SubField pulumi.StringPtrInput
}

func (IPLoadBalancingTCPRouteRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadBalancingTCPRouteRuleState)(nil)).Elem()
}

type iploadBalancingTCPRouteRuleArgs struct {
	// Human readable name for your rule, this field is for you
	DisplayName *string `pulumi:"displayName"`
	// Name of the field to match like "protocol" or "host". See "/ipLoadbalancing/{serviceName}/availableRouteRules" for a list of available rules
	Field string `pulumi:"field"`
	// Matching operator. Not all operators are available for all fields. See "/ipLoadbalancing/{serviceName}/availableRouteRules"
	Match string `pulumi:"match"`
	// Invert the matching operator effect
	Negate *bool `pulumi:"negate"`
	// Value to match against this match. Interpretation if this field depends on the match and field
	Pattern *string `pulumi:"pattern"`
	// The route to apply this rule
	RouteId string `pulumi:"routeId"`
	// The internal name of your IP load balancing
	ServiceName string `pulumi:"serviceName"`
	// Name of sub-field, if applicable. This may be a Cookie or Header name for instance
	SubField *string `pulumi:"subField"`
}

// The set of arguments for constructing a IPLoadBalancingTCPRouteRule resource.
type IPLoadBalancingTCPRouteRuleArgs struct {
	// Human readable name for your rule, this field is for you
	DisplayName pulumi.StringPtrInput
	// Name of the field to match like "protocol" or "host". See "/ipLoadbalancing/{serviceName}/availableRouteRules" for a list of available rules
	Field pulumi.StringInput
	// Matching operator. Not all operators are available for all fields. See "/ipLoadbalancing/{serviceName}/availableRouteRules"
	Match pulumi.StringInput
	// Invert the matching operator effect
	Negate pulumi.BoolPtrInput
	// Value to match against this match. Interpretation if this field depends on the match and field
	Pattern pulumi.StringPtrInput
	// The route to apply this rule
	RouteId pulumi.StringInput
	// The internal name of your IP load balancing
	ServiceName pulumi.StringInput
	// Name of sub-field, if applicable. This may be a Cookie or Header name for instance
	SubField pulumi.StringPtrInput
}

func (IPLoadBalancingTCPRouteRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadBalancingTCPRouteRuleArgs)(nil)).Elem()
}

type IPLoadBalancingTCPRouteRuleInput interface {
	pulumi.Input

	ToIPLoadBalancingTCPRouteRuleOutput() IPLoadBalancingTCPRouteRuleOutput
	ToIPLoadBalancingTCPRouteRuleOutputWithContext(ctx context.Context) IPLoadBalancingTCPRouteRuleOutput
}

func (*IPLoadBalancingTCPRouteRule) ElementType() reflect.Type {
	return reflect.TypeOf((**IPLoadBalancingTCPRouteRule)(nil)).Elem()
}

func (i *IPLoadBalancingTCPRouteRule) ToIPLoadBalancingTCPRouteRuleOutput() IPLoadBalancingTCPRouteRuleOutput {
	return i.ToIPLoadBalancingTCPRouteRuleOutputWithContext(context.Background())
}

func (i *IPLoadBalancingTCPRouteRule) ToIPLoadBalancingTCPRouteRuleOutputWithContext(ctx context.Context) IPLoadBalancingTCPRouteRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPLoadBalancingTCPRouteRuleOutput)
}

// IPLoadBalancingTCPRouteRuleArrayInput is an input type that accepts IPLoadBalancingTCPRouteRuleArray and IPLoadBalancingTCPRouteRuleArrayOutput values.
// You can construct a concrete instance of `IPLoadBalancingTCPRouteRuleArrayInput` via:
//
//          IPLoadBalancingTCPRouteRuleArray{ IPLoadBalancingTCPRouteRuleArgs{...} }
type IPLoadBalancingTCPRouteRuleArrayInput interface {
	pulumi.Input

	ToIPLoadBalancingTCPRouteRuleArrayOutput() IPLoadBalancingTCPRouteRuleArrayOutput
	ToIPLoadBalancingTCPRouteRuleArrayOutputWithContext(context.Context) IPLoadBalancingTCPRouteRuleArrayOutput
}

type IPLoadBalancingTCPRouteRuleArray []IPLoadBalancingTCPRouteRuleInput

func (IPLoadBalancingTCPRouteRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IPLoadBalancingTCPRouteRule)(nil)).Elem()
}

func (i IPLoadBalancingTCPRouteRuleArray) ToIPLoadBalancingTCPRouteRuleArrayOutput() IPLoadBalancingTCPRouteRuleArrayOutput {
	return i.ToIPLoadBalancingTCPRouteRuleArrayOutputWithContext(context.Background())
}

func (i IPLoadBalancingTCPRouteRuleArray) ToIPLoadBalancingTCPRouteRuleArrayOutputWithContext(ctx context.Context) IPLoadBalancingTCPRouteRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPLoadBalancingTCPRouteRuleArrayOutput)
}

// IPLoadBalancingTCPRouteRuleMapInput is an input type that accepts IPLoadBalancingTCPRouteRuleMap and IPLoadBalancingTCPRouteRuleMapOutput values.
// You can construct a concrete instance of `IPLoadBalancingTCPRouteRuleMapInput` via:
//
//          IPLoadBalancingTCPRouteRuleMap{ "key": IPLoadBalancingTCPRouteRuleArgs{...} }
type IPLoadBalancingTCPRouteRuleMapInput interface {
	pulumi.Input

	ToIPLoadBalancingTCPRouteRuleMapOutput() IPLoadBalancingTCPRouteRuleMapOutput
	ToIPLoadBalancingTCPRouteRuleMapOutputWithContext(context.Context) IPLoadBalancingTCPRouteRuleMapOutput
}

type IPLoadBalancingTCPRouteRuleMap map[string]IPLoadBalancingTCPRouteRuleInput

func (IPLoadBalancingTCPRouteRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IPLoadBalancingTCPRouteRule)(nil)).Elem()
}

func (i IPLoadBalancingTCPRouteRuleMap) ToIPLoadBalancingTCPRouteRuleMapOutput() IPLoadBalancingTCPRouteRuleMapOutput {
	return i.ToIPLoadBalancingTCPRouteRuleMapOutputWithContext(context.Background())
}

func (i IPLoadBalancingTCPRouteRuleMap) ToIPLoadBalancingTCPRouteRuleMapOutputWithContext(ctx context.Context) IPLoadBalancingTCPRouteRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPLoadBalancingTCPRouteRuleMapOutput)
}

type IPLoadBalancingTCPRouteRuleOutput struct{ *pulumi.OutputState }

func (IPLoadBalancingTCPRouteRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPLoadBalancingTCPRouteRule)(nil)).Elem()
}

func (o IPLoadBalancingTCPRouteRuleOutput) ToIPLoadBalancingTCPRouteRuleOutput() IPLoadBalancingTCPRouteRuleOutput {
	return o
}

func (o IPLoadBalancingTCPRouteRuleOutput) ToIPLoadBalancingTCPRouteRuleOutputWithContext(ctx context.Context) IPLoadBalancingTCPRouteRuleOutput {
	return o
}

// Human readable name for your rule, this field is for you
func (o IPLoadBalancingTCPRouteRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPLoadBalancingTCPRouteRule) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Name of the field to match like "protocol" or "host". See "/ipLoadbalancing/{serviceName}/availableRouteRules" for a list of available rules
func (o IPLoadBalancingTCPRouteRuleOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v *IPLoadBalancingTCPRouteRule) pulumi.StringOutput { return v.Field }).(pulumi.StringOutput)
}

// Matching operator. Not all operators are available for all fields. See "/ipLoadbalancing/{serviceName}/availableRouteRules"
func (o IPLoadBalancingTCPRouteRuleOutput) Match() pulumi.StringOutput {
	return o.ApplyT(func(v *IPLoadBalancingTCPRouteRule) pulumi.StringOutput { return v.Match }).(pulumi.StringOutput)
}

// Invert the matching operator effect
func (o IPLoadBalancingTCPRouteRuleOutput) Negate() pulumi.BoolOutput {
	return o.ApplyT(func(v *IPLoadBalancingTCPRouteRule) pulumi.BoolOutput { return v.Negate }).(pulumi.BoolOutput)
}

// Value to match against this match. Interpretation if this field depends on the match and field
func (o IPLoadBalancingTCPRouteRuleOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPLoadBalancingTCPRouteRule) pulumi.StringPtrOutput { return v.Pattern }).(pulumi.StringPtrOutput)
}

// The route to apply this rule
func (o IPLoadBalancingTCPRouteRuleOutput) RouteId() pulumi.StringOutput {
	return o.ApplyT(func(v *IPLoadBalancingTCPRouteRule) pulumi.StringOutput { return v.RouteId }).(pulumi.StringOutput)
}

// The internal name of your IP load balancing
func (o IPLoadBalancingTCPRouteRuleOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *IPLoadBalancingTCPRouteRule) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Name of sub-field, if applicable. This may be a Cookie or Header name for instance
func (o IPLoadBalancingTCPRouteRuleOutput) SubField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPLoadBalancingTCPRouteRule) pulumi.StringPtrOutput { return v.SubField }).(pulumi.StringPtrOutput)
}

type IPLoadBalancingTCPRouteRuleArrayOutput struct{ *pulumi.OutputState }

func (IPLoadBalancingTCPRouteRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IPLoadBalancingTCPRouteRule)(nil)).Elem()
}

func (o IPLoadBalancingTCPRouteRuleArrayOutput) ToIPLoadBalancingTCPRouteRuleArrayOutput() IPLoadBalancingTCPRouteRuleArrayOutput {
	return o
}

func (o IPLoadBalancingTCPRouteRuleArrayOutput) ToIPLoadBalancingTCPRouteRuleArrayOutputWithContext(ctx context.Context) IPLoadBalancingTCPRouteRuleArrayOutput {
	return o
}

func (o IPLoadBalancingTCPRouteRuleArrayOutput) Index(i pulumi.IntInput) IPLoadBalancingTCPRouteRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IPLoadBalancingTCPRouteRule {
		return vs[0].([]*IPLoadBalancingTCPRouteRule)[vs[1].(int)]
	}).(IPLoadBalancingTCPRouteRuleOutput)
}

type IPLoadBalancingTCPRouteRuleMapOutput struct{ *pulumi.OutputState }

func (IPLoadBalancingTCPRouteRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IPLoadBalancingTCPRouteRule)(nil)).Elem()
}

func (o IPLoadBalancingTCPRouteRuleMapOutput) ToIPLoadBalancingTCPRouteRuleMapOutput() IPLoadBalancingTCPRouteRuleMapOutput {
	return o
}

func (o IPLoadBalancingTCPRouteRuleMapOutput) ToIPLoadBalancingTCPRouteRuleMapOutputWithContext(ctx context.Context) IPLoadBalancingTCPRouteRuleMapOutput {
	return o
}

func (o IPLoadBalancingTCPRouteRuleMapOutput) MapIndex(k pulumi.StringInput) IPLoadBalancingTCPRouteRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IPLoadBalancingTCPRouteRule {
		return vs[0].(map[string]*IPLoadBalancingTCPRouteRule)[vs[1].(string)]
	}).(IPLoadBalancingTCPRouteRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IPLoadBalancingTCPRouteRuleInput)(nil)).Elem(), &IPLoadBalancingTCPRouteRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPLoadBalancingTCPRouteRuleArrayInput)(nil)).Elem(), IPLoadBalancingTCPRouteRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPLoadBalancingTCPRouteRuleMapInput)(nil)).Elem(), IPLoadBalancingTCPRouteRuleMap{})
	pulumi.RegisterOutputType(IPLoadBalancingTCPRouteRuleOutput{})
	pulumi.RegisterOutputType(IPLoadBalancingTCPRouteRuleArrayOutput{})
	pulumi.RegisterOutputType(IPLoadBalancingTCPRouteRuleMapOutput{})
}
