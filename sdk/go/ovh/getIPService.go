// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about an ip service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ovh.LookupIPService(ctx, &GetIPServiceArgs{
// 			ServiceName: "XXXXXX",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupIPService(ctx *pulumi.Context, args *LookupIPServiceArgs, opts ...pulumi.InvokeOption) (*LookupIPServiceResult, error) {
	var rv LookupIPServiceResult
	err := ctx.Invoke("ovh:index/getIPService:getIPService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIPService.
type LookupIPServiceArgs struct {
	// The service name
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getIPService.
type LookupIPServiceResult struct {
	// can be terminated
	CanBeTerminated bool `pulumi:"canBeTerminated"`
	// country
	Country string `pulumi:"country"`
	// Custom description on your ip
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// ip block
	Ip string `pulumi:"ip"`
	// IP block organisation Id
	OrganisationId string `pulumi:"organisationId"`
	// Routage information
	RoutedTos []GetIPServiceRoutedTo `pulumi:"routedTos"`
	// Service where ip is routed to
	ServiceName string `pulumi:"serviceName"`
	// Possible values for ip type (    "cdn", "cloud", "dedicated", "failover", "hostedSsl", "housing", "loadBalancing", "mail", "overthebox", "pcc", "pci", "private", "vpn", "vps", "vrack", "xdsl")
	Type string `pulumi:"type"`
}

func LookupIPServiceOutput(ctx *pulumi.Context, args LookupIPServiceOutputArgs, opts ...pulumi.InvokeOption) LookupIPServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIPServiceResult, error) {
			args := v.(LookupIPServiceArgs)
			r, err := LookupIPService(ctx, &args, opts...)
			var s LookupIPServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIPServiceResultOutput)
}

// A collection of arguments for invoking getIPService.
type LookupIPServiceOutputArgs struct {
	// The service name
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupIPServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIPServiceArgs)(nil)).Elem()
}

// A collection of values returned by getIPService.
type LookupIPServiceResultOutput struct{ *pulumi.OutputState }

func (LookupIPServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIPServiceResult)(nil)).Elem()
}

func (o LookupIPServiceResultOutput) ToLookupIPServiceResultOutput() LookupIPServiceResultOutput {
	return o
}

func (o LookupIPServiceResultOutput) ToLookupIPServiceResultOutputWithContext(ctx context.Context) LookupIPServiceResultOutput {
	return o
}

// can be terminated
func (o LookupIPServiceResultOutput) CanBeTerminated() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIPServiceResult) bool { return v.CanBeTerminated }).(pulumi.BoolOutput)
}

// country
func (o LookupIPServiceResultOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIPServiceResult) string { return v.Country }).(pulumi.StringOutput)
}

// Custom description on your ip
func (o LookupIPServiceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIPServiceResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupIPServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIPServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

// ip block
func (o LookupIPServiceResultOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIPServiceResult) string { return v.Ip }).(pulumi.StringOutput)
}

// IP block organisation Id
func (o LookupIPServiceResultOutput) OrganisationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIPServiceResult) string { return v.OrganisationId }).(pulumi.StringOutput)
}

// Routage information
func (o LookupIPServiceResultOutput) RoutedTos() GetIPServiceRoutedToArrayOutput {
	return o.ApplyT(func(v LookupIPServiceResult) []GetIPServiceRoutedTo { return v.RoutedTos }).(GetIPServiceRoutedToArrayOutput)
}

// Service where ip is routed to
func (o LookupIPServiceResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIPServiceResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// Possible values for ip type (    "cdn", "cloud", "dedicated", "failover", "hostedSsl", "housing", "loadBalancing", "mail", "overthebox", "pcc", "pci", "private", "vpn", "vps", "vrack", "xdsl")
func (o LookupIPServiceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIPServiceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIPServiceResultOutput{})
}
