// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a nodepool in a OVH Managed Kubernetes Service cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ovh.NewCloudProjectKubeNodepool(ctx, "pool", &ovh.CloudProjectKubeNodepoolArgs{
// 			DesiredNodes: pulumi.Int(3),
// 			FlavorName:   pulumi.String("b2-7"),
// 			KubeId:       pulumi.String("xxxxxxxx-2bf9-xxxx-xxxx-xxxxxxxxxxxx"),
// 			MaxNodes:     pulumi.Int(3),
// 			MinNodes:     pulumi.Int(3),
// 			ServiceName:  pulumi.String("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type CloudProjectKubeNodepool struct {
	pulumi.CustomResourceState

	// should the pool use the anti-affinity feature. Default to `false`.
	AntiAffinity pulumi.BoolPtrOutput `pulumi:"antiAffinity"`
	// Enable auto-scaling for the pool. Default to `false`.
	Autoscale pulumi.BoolPtrOutput `pulumi:"autoscale"`
	// Number of nodes which are actually ready in the pool
	AvailableNodes pulumi.IntOutput `pulumi:"availableNodes"`
	// Creation date
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Number of nodes present in the pool
	CurrentNodes pulumi.IntOutput `pulumi:"currentNodes"`
	// number of nodes to start.
	DesiredNodes pulumi.IntOutput `pulumi:"desiredNodes"`
	// Flavor name
	Flavor pulumi.StringOutput `pulumi:"flavor"`
	// a valid OVH public cloud flavor ID in which the nodes will be started.
	// Ex: "b2-7". Changing this value recreates the resource.
	// You can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/
	FlavorName pulumi.StringOutput `pulumi:"flavorName"`
	// The id of the managed kubernetes cluster.
	KubeId pulumi.StringOutput `pulumi:"kubeId"`
	// maximum number of nodes allowed in the pool.
	// Setting `desiredNodes` over this value will raise an error.
	MaxNodes pulumi.IntOutput `pulumi:"maxNodes"`
	// minimum number of nodes allowed in the pool.
	// Setting `desiredNodes` under this value will raise an error.
	MinNodes pulumi.IntOutput `pulumi:"minNodes"`
	// should the nodes be billed on a monthly basis. Default to `false`.
	MonthlyBilled pulumi.BoolPtrOutput `pulumi:"monthlyBilled"`
	// The name of the nodepool.
	// Changing this value recreates the resource.
	// Warning: "_" char is not allowed!
	Name pulumi.StringOutput `pulumi:"name"`
	// Project id
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Status describing the state between number of nodes wanted and available ones
	SizeStatus pulumi.StringOutput `pulumi:"sizeStatus"`
	// Current status
	Status pulumi.StringOutput `pulumi:"status"`
	// Number of nodes with latest version installed in the pool
	UpToDateNodes pulumi.IntOutput `pulumi:"upToDateNodes"`
	// Last update date
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewCloudProjectKubeNodepool registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectKubeNodepool(ctx *pulumi.Context,
	name string, args *CloudProjectKubeNodepoolArgs, opts ...pulumi.ResourceOption) (*CloudProjectKubeNodepool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FlavorName == nil {
		return nil, errors.New("invalid value for required argument 'FlavorName'")
	}
	if args.KubeId == nil {
		return nil, errors.New("invalid value for required argument 'KubeId'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	var resource CloudProjectKubeNodepool
	err := ctx.RegisterResource("ovh:index/cloudProjectKubeNodepool:CloudProjectKubeNodepool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectKubeNodepool gets an existing CloudProjectKubeNodepool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectKubeNodepool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectKubeNodepoolState, opts ...pulumi.ResourceOption) (*CloudProjectKubeNodepool, error) {
	var resource CloudProjectKubeNodepool
	err := ctx.ReadResource("ovh:index/cloudProjectKubeNodepool:CloudProjectKubeNodepool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectKubeNodepool resources.
type cloudProjectKubeNodepoolState struct {
	// should the pool use the anti-affinity feature. Default to `false`.
	AntiAffinity *bool `pulumi:"antiAffinity"`
	// Enable auto-scaling for the pool. Default to `false`.
	Autoscale *bool `pulumi:"autoscale"`
	// Number of nodes which are actually ready in the pool
	AvailableNodes *int `pulumi:"availableNodes"`
	// Creation date
	CreatedAt *string `pulumi:"createdAt"`
	// Number of nodes present in the pool
	CurrentNodes *int `pulumi:"currentNodes"`
	// number of nodes to start.
	DesiredNodes *int `pulumi:"desiredNodes"`
	// Flavor name
	Flavor *string `pulumi:"flavor"`
	// a valid OVH public cloud flavor ID in which the nodes will be started.
	// Ex: "b2-7". Changing this value recreates the resource.
	// You can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/
	FlavorName *string `pulumi:"flavorName"`
	// The id of the managed kubernetes cluster.
	KubeId *string `pulumi:"kubeId"`
	// maximum number of nodes allowed in the pool.
	// Setting `desiredNodes` over this value will raise an error.
	MaxNodes *int `pulumi:"maxNodes"`
	// minimum number of nodes allowed in the pool.
	// Setting `desiredNodes` under this value will raise an error.
	MinNodes *int `pulumi:"minNodes"`
	// should the nodes be billed on a monthly basis. Default to `false`.
	MonthlyBilled *bool `pulumi:"monthlyBilled"`
	// The name of the nodepool.
	// Changing this value recreates the resource.
	// Warning: "_" char is not allowed!
	Name *string `pulumi:"name"`
	// Project id
	ProjectId *string `pulumi:"projectId"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName *string `pulumi:"serviceName"`
	// Status describing the state between number of nodes wanted and available ones
	SizeStatus *string `pulumi:"sizeStatus"`
	// Current status
	Status *string `pulumi:"status"`
	// Number of nodes with latest version installed in the pool
	UpToDateNodes *int `pulumi:"upToDateNodes"`
	// Last update date
	UpdatedAt *string `pulumi:"updatedAt"`
}

type CloudProjectKubeNodepoolState struct {
	// should the pool use the anti-affinity feature. Default to `false`.
	AntiAffinity pulumi.BoolPtrInput
	// Enable auto-scaling for the pool. Default to `false`.
	Autoscale pulumi.BoolPtrInput
	// Number of nodes which are actually ready in the pool
	AvailableNodes pulumi.IntPtrInput
	// Creation date
	CreatedAt pulumi.StringPtrInput
	// Number of nodes present in the pool
	CurrentNodes pulumi.IntPtrInput
	// number of nodes to start.
	DesiredNodes pulumi.IntPtrInput
	// Flavor name
	Flavor pulumi.StringPtrInput
	// a valid OVH public cloud flavor ID in which the nodes will be started.
	// Ex: "b2-7". Changing this value recreates the resource.
	// You can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/
	FlavorName pulumi.StringPtrInput
	// The id of the managed kubernetes cluster.
	KubeId pulumi.StringPtrInput
	// maximum number of nodes allowed in the pool.
	// Setting `desiredNodes` over this value will raise an error.
	MaxNodes pulumi.IntPtrInput
	// minimum number of nodes allowed in the pool.
	// Setting `desiredNodes` under this value will raise an error.
	MinNodes pulumi.IntPtrInput
	// should the nodes be billed on a monthly basis. Default to `false`.
	MonthlyBilled pulumi.BoolPtrInput
	// The name of the nodepool.
	// Changing this value recreates the resource.
	// Warning: "_" char is not allowed!
	Name pulumi.StringPtrInput
	// Project id
	ProjectId pulumi.StringPtrInput
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringPtrInput
	// Status describing the state between number of nodes wanted and available ones
	SizeStatus pulumi.StringPtrInput
	// Current status
	Status pulumi.StringPtrInput
	// Number of nodes with latest version installed in the pool
	UpToDateNodes pulumi.IntPtrInput
	// Last update date
	UpdatedAt pulumi.StringPtrInput
}

func (CloudProjectKubeNodepoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectKubeNodepoolState)(nil)).Elem()
}

type cloudProjectKubeNodepoolArgs struct {
	// should the pool use the anti-affinity feature. Default to `false`.
	AntiAffinity *bool `pulumi:"antiAffinity"`
	// Enable auto-scaling for the pool. Default to `false`.
	Autoscale *bool `pulumi:"autoscale"`
	// number of nodes to start.
	DesiredNodes *int `pulumi:"desiredNodes"`
	// a valid OVH public cloud flavor ID in which the nodes will be started.
	// Ex: "b2-7". Changing this value recreates the resource.
	// You can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/
	FlavorName string `pulumi:"flavorName"`
	// The id of the managed kubernetes cluster.
	KubeId string `pulumi:"kubeId"`
	// maximum number of nodes allowed in the pool.
	// Setting `desiredNodes` over this value will raise an error.
	MaxNodes *int `pulumi:"maxNodes"`
	// minimum number of nodes allowed in the pool.
	// Setting `desiredNodes` under this value will raise an error.
	MinNodes *int `pulumi:"minNodes"`
	// should the nodes be billed on a monthly basis. Default to `false`.
	MonthlyBilled *bool `pulumi:"monthlyBilled"`
	// The name of the nodepool.
	// Changing this value recreates the resource.
	// Warning: "_" char is not allowed!
	Name *string `pulumi:"name"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a CloudProjectKubeNodepool resource.
type CloudProjectKubeNodepoolArgs struct {
	// should the pool use the anti-affinity feature. Default to `false`.
	AntiAffinity pulumi.BoolPtrInput
	// Enable auto-scaling for the pool. Default to `false`.
	Autoscale pulumi.BoolPtrInput
	// number of nodes to start.
	DesiredNodes pulumi.IntPtrInput
	// a valid OVH public cloud flavor ID in which the nodes will be started.
	// Ex: "b2-7". Changing this value recreates the resource.
	// You can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/
	FlavorName pulumi.StringInput
	// The id of the managed kubernetes cluster.
	KubeId pulumi.StringInput
	// maximum number of nodes allowed in the pool.
	// Setting `desiredNodes` over this value will raise an error.
	MaxNodes pulumi.IntPtrInput
	// minimum number of nodes allowed in the pool.
	// Setting `desiredNodes` under this value will raise an error.
	MinNodes pulumi.IntPtrInput
	// should the nodes be billed on a monthly basis. Default to `false`.
	MonthlyBilled pulumi.BoolPtrInput
	// The name of the nodepool.
	// Changing this value recreates the resource.
	// Warning: "_" char is not allowed!
	Name pulumi.StringPtrInput
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringInput
}

func (CloudProjectKubeNodepoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectKubeNodepoolArgs)(nil)).Elem()
}

type CloudProjectKubeNodepoolInput interface {
	pulumi.Input

	ToCloudProjectKubeNodepoolOutput() CloudProjectKubeNodepoolOutput
	ToCloudProjectKubeNodepoolOutputWithContext(ctx context.Context) CloudProjectKubeNodepoolOutput
}

func (*CloudProjectKubeNodepool) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectKubeNodepool)(nil)).Elem()
}

func (i *CloudProjectKubeNodepool) ToCloudProjectKubeNodepoolOutput() CloudProjectKubeNodepoolOutput {
	return i.ToCloudProjectKubeNodepoolOutputWithContext(context.Background())
}

func (i *CloudProjectKubeNodepool) ToCloudProjectKubeNodepoolOutputWithContext(ctx context.Context) CloudProjectKubeNodepoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectKubeNodepoolOutput)
}

// CloudProjectKubeNodepoolArrayInput is an input type that accepts CloudProjectKubeNodepoolArray and CloudProjectKubeNodepoolArrayOutput values.
// You can construct a concrete instance of `CloudProjectKubeNodepoolArrayInput` via:
//
//          CloudProjectKubeNodepoolArray{ CloudProjectKubeNodepoolArgs{...} }
type CloudProjectKubeNodepoolArrayInput interface {
	pulumi.Input

	ToCloudProjectKubeNodepoolArrayOutput() CloudProjectKubeNodepoolArrayOutput
	ToCloudProjectKubeNodepoolArrayOutputWithContext(context.Context) CloudProjectKubeNodepoolArrayOutput
}

type CloudProjectKubeNodepoolArray []CloudProjectKubeNodepoolInput

func (CloudProjectKubeNodepoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudProjectKubeNodepool)(nil)).Elem()
}

func (i CloudProjectKubeNodepoolArray) ToCloudProjectKubeNodepoolArrayOutput() CloudProjectKubeNodepoolArrayOutput {
	return i.ToCloudProjectKubeNodepoolArrayOutputWithContext(context.Background())
}

func (i CloudProjectKubeNodepoolArray) ToCloudProjectKubeNodepoolArrayOutputWithContext(ctx context.Context) CloudProjectKubeNodepoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectKubeNodepoolArrayOutput)
}

// CloudProjectKubeNodepoolMapInput is an input type that accepts CloudProjectKubeNodepoolMap and CloudProjectKubeNodepoolMapOutput values.
// You can construct a concrete instance of `CloudProjectKubeNodepoolMapInput` via:
//
//          CloudProjectKubeNodepoolMap{ "key": CloudProjectKubeNodepoolArgs{...} }
type CloudProjectKubeNodepoolMapInput interface {
	pulumi.Input

	ToCloudProjectKubeNodepoolMapOutput() CloudProjectKubeNodepoolMapOutput
	ToCloudProjectKubeNodepoolMapOutputWithContext(context.Context) CloudProjectKubeNodepoolMapOutput
}

type CloudProjectKubeNodepoolMap map[string]CloudProjectKubeNodepoolInput

func (CloudProjectKubeNodepoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudProjectKubeNodepool)(nil)).Elem()
}

func (i CloudProjectKubeNodepoolMap) ToCloudProjectKubeNodepoolMapOutput() CloudProjectKubeNodepoolMapOutput {
	return i.ToCloudProjectKubeNodepoolMapOutputWithContext(context.Background())
}

func (i CloudProjectKubeNodepoolMap) ToCloudProjectKubeNodepoolMapOutputWithContext(ctx context.Context) CloudProjectKubeNodepoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectKubeNodepoolMapOutput)
}

type CloudProjectKubeNodepoolOutput struct{ *pulumi.OutputState }

func (CloudProjectKubeNodepoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectKubeNodepool)(nil)).Elem()
}

func (o CloudProjectKubeNodepoolOutput) ToCloudProjectKubeNodepoolOutput() CloudProjectKubeNodepoolOutput {
	return o
}

func (o CloudProjectKubeNodepoolOutput) ToCloudProjectKubeNodepoolOutputWithContext(ctx context.Context) CloudProjectKubeNodepoolOutput {
	return o
}

// should the pool use the anti-affinity feature. Default to `false`.
func (o CloudProjectKubeNodepoolOutput) AntiAffinity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.BoolPtrOutput { return v.AntiAffinity }).(pulumi.BoolPtrOutput)
}

// Enable auto-scaling for the pool. Default to `false`.
func (o CloudProjectKubeNodepoolOutput) Autoscale() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.BoolPtrOutput { return v.Autoscale }).(pulumi.BoolPtrOutput)
}

// Number of nodes which are actually ready in the pool
func (o CloudProjectKubeNodepoolOutput) AvailableNodes() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.IntOutput { return v.AvailableNodes }).(pulumi.IntOutput)
}

// Creation date
func (o CloudProjectKubeNodepoolOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Number of nodes present in the pool
func (o CloudProjectKubeNodepoolOutput) CurrentNodes() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.IntOutput { return v.CurrentNodes }).(pulumi.IntOutput)
}

// number of nodes to start.
func (o CloudProjectKubeNodepoolOutput) DesiredNodes() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.IntOutput { return v.DesiredNodes }).(pulumi.IntOutput)
}

// Flavor name
func (o CloudProjectKubeNodepoolOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.StringOutput { return v.Flavor }).(pulumi.StringOutput)
}

// a valid OVH public cloud flavor ID in which the nodes will be started.
// Ex: "b2-7". Changing this value recreates the resource.
// You can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/
func (o CloudProjectKubeNodepoolOutput) FlavorName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.StringOutput { return v.FlavorName }).(pulumi.StringOutput)
}

// The id of the managed kubernetes cluster.
func (o CloudProjectKubeNodepoolOutput) KubeId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.StringOutput { return v.KubeId }).(pulumi.StringOutput)
}

// maximum number of nodes allowed in the pool.
// Setting `desiredNodes` over this value will raise an error.
func (o CloudProjectKubeNodepoolOutput) MaxNodes() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.IntOutput { return v.MaxNodes }).(pulumi.IntOutput)
}

// minimum number of nodes allowed in the pool.
// Setting `desiredNodes` under this value will raise an error.
func (o CloudProjectKubeNodepoolOutput) MinNodes() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.IntOutput { return v.MinNodes }).(pulumi.IntOutput)
}

// should the nodes be billed on a monthly basis. Default to `false`.
func (o CloudProjectKubeNodepoolOutput) MonthlyBilled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.BoolPtrOutput { return v.MonthlyBilled }).(pulumi.BoolPtrOutput)
}

// The name of the nodepool.
// Changing this value recreates the resource.
// Warning: "_" char is not allowed!
func (o CloudProjectKubeNodepoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Project id
func (o CloudProjectKubeNodepoolOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The id of the public cloud project. If omitted,
// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
func (o CloudProjectKubeNodepoolOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Status describing the state between number of nodes wanted and available ones
func (o CloudProjectKubeNodepoolOutput) SizeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.StringOutput { return v.SizeStatus }).(pulumi.StringOutput)
}

// Current status
func (o CloudProjectKubeNodepoolOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Number of nodes with latest version installed in the pool
func (o CloudProjectKubeNodepoolOutput) UpToDateNodes() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.IntOutput { return v.UpToDateNodes }).(pulumi.IntOutput)
}

// Last update date
func (o CloudProjectKubeNodepoolOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKubeNodepool) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type CloudProjectKubeNodepoolArrayOutput struct{ *pulumi.OutputState }

func (CloudProjectKubeNodepoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudProjectKubeNodepool)(nil)).Elem()
}

func (o CloudProjectKubeNodepoolArrayOutput) ToCloudProjectKubeNodepoolArrayOutput() CloudProjectKubeNodepoolArrayOutput {
	return o
}

func (o CloudProjectKubeNodepoolArrayOutput) ToCloudProjectKubeNodepoolArrayOutputWithContext(ctx context.Context) CloudProjectKubeNodepoolArrayOutput {
	return o
}

func (o CloudProjectKubeNodepoolArrayOutput) Index(i pulumi.IntInput) CloudProjectKubeNodepoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudProjectKubeNodepool {
		return vs[0].([]*CloudProjectKubeNodepool)[vs[1].(int)]
	}).(CloudProjectKubeNodepoolOutput)
}

type CloudProjectKubeNodepoolMapOutput struct{ *pulumi.OutputState }

func (CloudProjectKubeNodepoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudProjectKubeNodepool)(nil)).Elem()
}

func (o CloudProjectKubeNodepoolMapOutput) ToCloudProjectKubeNodepoolMapOutput() CloudProjectKubeNodepoolMapOutput {
	return o
}

func (o CloudProjectKubeNodepoolMapOutput) ToCloudProjectKubeNodepoolMapOutputWithContext(ctx context.Context) CloudProjectKubeNodepoolMapOutput {
	return o
}

func (o CloudProjectKubeNodepoolMapOutput) MapIndex(k pulumi.StringInput) CloudProjectKubeNodepoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudProjectKubeNodepool {
		return vs[0].(map[string]*CloudProjectKubeNodepool)[vs[1].(string)]
	}).(CloudProjectKubeNodepoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectKubeNodepoolInput)(nil)).Elem(), &CloudProjectKubeNodepool{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectKubeNodepoolArrayInput)(nil)).Elem(), CloudProjectKubeNodepoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectKubeNodepoolMapInput)(nil)).Elem(), CloudProjectKubeNodepoolMap{})
	pulumi.RegisterOutputType(CloudProjectKubeNodepoolOutput{})
	pulumi.RegisterOutputType(CloudProjectKubeNodepoolArrayOutput{})
	pulumi.RegisterOutputType(CloudProjectKubeNodepoolMapOutput{})
}
